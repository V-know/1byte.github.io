<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>scala-exception-handler</title>
      <link href="/coding/scala-exception-handler.html"/>
      <url>/coding/scala-exception-handler.html</url>
      <content type="html"><![CDATA[<p>在处理第11行读文件时，由于数据文件出现的不规律，在指定日期内可能存在日志文件交不存在的情况，这里需要处理下异常：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readLog</span></span>(sc: <span class="type">SparkContext</span>, startDate: <span class="type">String</span>, endDate: <span class="type">String</span>, logNames: <span class="type">List</span>[<span class="type">String</span>]): <span class="type">RDD</span>[<span class="type">String</span>] = &#123;</span><br><span class="line">  <span class="keyword">val</span> dateLst = <span class="type">DateUtils</span>.getDateListBetweenTwoDate(startDate, endDate)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> logRdd = sc.makeRDD(<span class="type">List</span>[<span class="type">String</span>]())</span><br><span class="line">  <span class="keyword">for</span> (date &lt;- dateLst) &#123;</span><br><span class="line">    <span class="keyword">val</span> year = date.substring(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">    <span class="keyword">val</span> month = date.substring(<span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">val</span> day = date.substring(<span class="number">6</span>, <span class="number">8</span>)</span><br><span class="line">    <span class="keyword">for</span> (logName &lt;- logNames) &#123;</span><br><span class="line">       <span class="keyword">val</span> logRdd = logRdd.union(</span><br><span class="line">        <span class="keyword">try</span> &#123;sc.textFile(<span class="string">s"cosn://fuge/mid-data/fuge/ssp/bid-log/<span class="subst">$year</span>/<span class="subst">$month</span>/<span class="subst">$day</span>/<span class="subst">$&#123;logName&#125;</span>*"</span>)</span><br><span class="line">          .map(x =&gt; x.split(<span class="string">"\\|"</span>, <span class="number">-1</span>))</span><br><span class="line">          .filter(x =&gt; x.length &gt;= <span class="number">2</span> &amp;&amp; (x(<span class="number">1</span>).trim == <span class="string">"6"</span> || x(<span class="number">1</span>).trim == <span class="string">"0"</span>)).map(_.toString) <span class="comment">// 0和6为请求成功的状态码</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">          <span class="keyword">case</span> _: <span class="type">Exception</span> =&gt; sc.makeRDD(<span class="type">List</span>[<span class="type">String</span>]())</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  logRdd</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>  <p>  最初犯的错误是把try catch放在了union语句的上层，导致异常是被抓取了，但是RDD却未被正确赋值。</p><p>  除了上述方法，还可通过重写文件读取接口实现异常的捕获与RDD的正常赋值：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> def textFileFromObjectStorage(path: String, numOfCoalesce: Int = 0): RDD[String] = &#123;</span><br><span class="line">  val data = sc.newAPIHadoopFile(path</span><br><span class="line">    , classOf[EmptiableTextInputFormat]</span><br><span class="line">    , classOf[LongWritable]</span><br><span class="line">    , classOf[Text]</span><br><span class="line">    , sc.hadoopConfiguration)</span><br><span class="line">    .map &#123;</span><br><span class="line">      x =&gt;</span><br><span class="line">        x._2.toString</span><br><span class="line">    &#125;</span><br><span class="line">  numOfCoalesce match &#123;</span><br><span class="line">    case 0 =&gt;</span><br><span class="line">      data</span><br><span class="line">    case _ =&gt;</span><br><span class="line">      data.coalesce(numOfCoalesce)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  newAPIHadoopFile说明，参考：<a href="https://spark.apache.org/docs/2.0.2/api/java/org/apache/spark/SparkContext.html#newAPIHadoopFile(java.lang.String,%20scala.reflect.ClassTag,%20scala.reflect.ClassTag,%20scala.reflect.ClassTag" target="_blank" rel="noopener">newAPIHadoopFile Doc</a>)</p>]]></content>
      
      <categories>
          
          <category> coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> Exception </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>红芯浏览器下载</title>
      <link href="/opinions/fake-chrome.html"/>
      <url>/opinions/fake-chrome.html</url>
      <content type="html"><![CDATA[<p>宣称打破美国垄断、自主研发出国产浏览器内核的<code>红芯浏览器</code>，却被质疑使用的是<code>谷歌Chrome内核</code>，而且是两年前的旧版内核（详细剖析可参考：<a href="https://mp.weixin.qq.com/s/8N-a68KEeJQM3FzQi_eYyg" target="_blank" rel="noopener">融资2.5亿的国产浏览器之光，竟然只是谷歌浏览器换了层皮？</a></p><a id="more"></a><p>红芯联合创始人高婧对中新网回应称，网上文章断章取义，安装包里之所以有Chrome文件，因为本来就是基于开源的Chrome架构。但红芯依然是自主可控的国产内核，因为有智能感知渲染等其他方面的创新。至于安装包为何下线，是因为技术部启动应急预案，开始<strong>自查</strong>。</p><p>原始安装包被官网下架，号称是<strong>自查</strong>，简直就是此地无银三百两。</p><p><strong><code>红</code></strong>装虽然穿在身，我心依然是开源心。</p><blockquote><p> 注：Chromium 是开源软件，并无国籍之说，Chrome是闭源的。Chromium 遵守 BSD 许可协议，要求类库/软件的文档和版权声明中包含原 BSD 协议，<code>红芯</code>显然没有做到</p></blockquote><hr><p>为防止官方永久撤包耍赖不认帐，这里提供一个下载地址，有兴趣的以可下载下来体验一下，这可以是<code>高阶版</code>的Chrome皮肤哦，而且还支持早已被所有主流浏览器抛弃的XP系统呢!!!!</p><p>下载：<a href="https://pan.baidu.com/s/1YvYboYttCxuZwx6uZGQgXQ" target="_blank" rel="noopener">红芯浏览器官方版</a></p><p>如果文件被封或不可用，请<a href="mailto:none@canstop.me" target="_blank" rel="noopener">邮件联系我</a>!</p><hr><h4 id="最后，衷心希望早日用上更多更好的真正国产核心软件。"><a href="#最后，衷心希望早日用上更多更好的真正国产核心软件。" class="headerlink" title="最后，衷心希望早日用上更多更好的真正国产核心软件。"></a>最后，衷心希望早日用上更多更好的<strong>真正国产</strong>核心软件。</h4>]]></content>
      
      <categories>
          
          <category> opinions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红芯浏览器 </tag>
            
            <tag> Shame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gitlab问题小结</title>
      <link href="/issues/gitlab-trouble-shooting.html"/>
      <url>/issues/gitlab-trouble-shooting.html</url>
      <content type="html"><![CDATA[<h3 id="supervise-redis-sleep-长时间卡死"><a href="#supervise-redis-sleep-长时间卡死" class="headerlink" title="supervise_redis_sleep 长时间卡死"></a>supervise_redis_sleep 长时间卡死</h3><p>解决方案：</p><p>1、按住CTRL+C强制结束；</p><p>2、运行：sudo systemctl restart gitlab-runsvdir；</p><p>3、再次执行：sudo gitlab-ctl reconfigure<br><a id="more"></a><br>默认root密码：5iveL!fe</p><h3 id="shell端口更改"><a href="#shell端口更改" class="headerlink" title="shell端口更改"></a>shell端口更改</h3><p>/etc/gitlab/gitlab.rb<br>ssh_port</p><h3 id="ssh端口无法更新，重启失败"><a href="#ssh端口无法更新，重启失败" class="headerlink" title="ssh端口无法更新，重启失败"></a>ssh端口无法更新，重启失败</h3><p>禁用selinux后，重启即可</p><h3 id="invalid-byte-sequence-in-US-ASCII"><a href="#invalid-byte-sequence-in-US-ASCII" class="headerlink" title="invalid byte sequence in US-ASCII"></a>invalid byte sequence in US-ASCII</h3><p>将下面一行添加到.bashrc 就ok了</p><p><code>export RUBYOPT=&quot;-U -Ku -E utf-8:utf-8&quot;</code></p><h3 id="gitblab界面上不显示推送记录"><a href="#gitblab界面上不显示推送记录" class="headerlink" title="gitblab界面上不显示推送记录"></a>gitblab界面上不显示推送记录</h3><p>此故障是通常见于从备份恢复后且前后版本不一致情况（现有版本新于之前版本），具体原因是由于新老版本所用的hook机制不一样</p><p>老版本会到/home/git/gitlab-shell/hooks下面去找<br>新版本会到/opt/gitlab/embedded/service/gitlab-shell/hooks下面去找</p><p>如果是新版本将git home软链到/home/git就可以了</p>]]></content>
      
      <categories>
          
          <category> issues </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitlab </tag>
            
            <tag> Issue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>无GUI的CentOS上使用Selenium+Chrome</title>
      <link href="/python/chromium-on-centos-for-selenium.html"/>
      <url>/python/chromium-on-centos-for-selenium.html</url>
      <content type="html"><![CDATA[<p>客户的网站上的监测代码最近连续两次在网站更新时被清除掉，导致无法正常获取网站访问数据，影响到后续大数据分析。</p><p>为解决这个问题，决定使用Python <code>Selenium</code>模块来实现网站按钮模拟点击，同时监测我们后台是否能正常收到，以此来判断网站按钮监测代码是否有正常部署。</p><p><code>Selenium</code>很好用很强大，开发和部署也都很简单，是自动化测试非常好的工具，但是问题是我们需要在无GUI的服务器上进行部署，这就牵涉到在无GUI的服务器上安装浏览器的问题，我这里选择的是Chrome。</p><hr><p>下面简单分享一个部署过程中遇到的坑，也当作是总结。<br><a id="more"></a></p><h3 id="一、安装Chromium"><a href="#一、安装Chromium" class="headerlink" title="一、安装Chromium"></a>一、安装Chromium</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y chromium</span><br></pre></td></tr></table></figure><p>检测安装结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ll /usr/bin/ | grep chrom</span><br><span class="line">-rwxr-xr-x.   1 root root    8136192 Jun  7 17:02 chromedriver</span><br><span class="line">lrwxrwxrwx.   1 root root         47 Aug  6 16:51 chromium -&gt; /usr/lib64/chromium-browser/chromium-browser.sh</span><br></pre></td></tr></table></figure><h3 id="二、安装XVFB"><a href="#二、安装XVFB" class="headerlink" title="二、安装XVFB"></a>二、安装XVFB</h3><p><code>XVFB</code>全称为：<code>virtual framebuffer X server for X Version 11</code>，可以直接处理Windows的图形化功能，并且不会把图像输出到屏幕上，也就是说，就算你的电脑没有启动Xwindow，也依然也可以执行图形化软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install xorg-x11-fonts* Xvfb -y</span><br></pre></td></tr></table></figure><h3 id="三、编写浏览器启动脚本"><a href="#三、编写浏览器启动脚本" class="headerlink" title="三、编写浏览器启动脚本"></a>三、编写浏览器启动脚本</h3><p>利用xvfb来启动Chromium，并设置参数</p><p><code>vim /usr/bin/xvfb-chromium</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">_kill_procs() &#123;</span><br><span class="line">  kill -TERM $chromium</span><br><span class="line">  wait $chromium</span><br><span class="line">  kill -TERM $xvfb</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Setup a trap to catch SIGTERM and relay it to child processes</span><br><span class="line">trap _kill_procs SIGTERM</span><br><span class="line"></span><br><span class="line">XVFB_WHD=$&#123;XVFB_WHD:-1280x720x16&#125;</span><br><span class="line"></span><br><span class="line"># Start Xvfb</span><br><span class="line">Xvfb :99 -ac -screen 0 $XVFB_WHD -nolisten tcp &amp;</span><br><span class="line">xvfb=$!</span><br><span class="line"></span><br><span class="line">export DISPLAY=:99</span><br><span class="line"></span><br><span class="line">chromium --no-sandbox  --disable-dev-shm-usage --headless --disable-gp $@ &amp;</span><br><span class="line">chromium=$!</span><br><span class="line"></span><br><span class="line">wait $chromium</span><br><span class="line">wait $xvfb</span><br></pre></td></tr></table></figure><blockquote><p>以上代码参考：<a href="https://github.com/mark-adams/docker-chromium-xvfb/blob/master/images/base/xvfb-chromium" target="_blank" rel="noopener">https://github.com/mark-adams/docker-chromium-xvfb/blob/master/images/base/xvfb-chromium</a> ，修改了第20行，添加了三个参数预防一些异常报错</p></blockquote><p>为脚本添加可执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/bin/xvfb-chromium</span><br></pre></td></tr></table></figure><h3 id="四、更改链接，调整命令"><a href="#四、更改链接，调整命令" class="headerlink" title="四、更改链接，调整命令"></a>四、更改链接，调整命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib64/chromium-browser/chromium-browser.sh /usr/bin/chromium</span><br><span class="line">rm -rf /usr/bin/chromium-browser</span><br><span class="line">ln -s /usr/bin/xvfb-chromium /usr/bin/chromium-browser</span><br><span class="line">ln -s /usr/bin/xvfb-chromium /usr/bin/google-chrome</span><br></pre></td></tr></table></figure><p>检测调整结果，显示如下所示，即表示正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># ll /usr/bin/ | grep chrom*</span><br><span class="line">-rwxr-xr-x.   1 root root    8136192 Jun  7 17:02 chromedriver</span><br><span class="line">lrwxrwxrwx.   1 root root         47 Aug  6 16:51 chromium -&gt; /usr/lib64/chromium-browser/chromium-browser.sh</span><br><span class="line">lrwxrwxrwx.   1 root root         22 Aug  6 16:51 chromium-browser -&gt; /usr/bin/xvfb-chromium</span><br><span class="line">lrwxrwxrwx.   1 root root         22 Aug  6 16:51 google-chrome -&gt; /usr/bin/xvfb-chromium</span><br><span class="line">-rwxr-xr-x.   1 root root        422 Aug  7 10:37 xvfb-chromium</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://hub.docker.com/r/markadams/chromium-xvfb/~/dockerfile/" target="_blank" rel="noopener">https://hub.docker.com/r/markadams/chromium-xvfb/~/dockerfile/</a></p></blockquote><h3 id="五、遇到的问题"><a href="#五、遇到的问题" class="headerlink" title="五、遇到的问题"></a>五、遇到的问题</h3><p>最学见的报错：</p><p><code>selenium.common.exceptions.WebDriverException: Message: unknown error: DevToolsActivePort file doesn&#39;t exist</code></p><p>这个报错由两个原因导致<br>第一个是原因是参数设置问题，可直接添加相关参数即可<br>在Python代码中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(&apos;--headless&apos;)</span><br><span class="line">chrome_options.add_argument(&apos;--no-sandbox&apos;)</span><br><span class="line">chrome_options.add_argument(&apos;--disable-dev-shm-usage&apos;)</span><br><span class="line">driver = webdriver.Chrome(&apos;/path/to/your_chrome_driver_dir/chromedriver&apos;,chrome_options=chrome_options)</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://github.com/heroku/heroku-buildpack-google-chrome/issues/46" target="_blank" rel="noopener">https://github.com/heroku/heroku-buildpack-google-chrome/issues/46</a></p></blockquote><p>或者把上述参数添加在本文每三步的脚本中</p><p>另一个会导致这个报错的原因是在编写完第三的步脚本<code>/usr/bin/xvfb-chromium</code>后没有给其赋予可执行权限把致。</p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Selenium </tag>
            
            <tag> Chromium </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>V</title>
      <link href="/voice/v.html"/>
      <url>/voice/v.html</url>
      <content type="html"><![CDATA[<p>V’s speech is recognized by the analysts at Smith Change the World Incorporated as one of the most influential speeches of the near future.<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">”Good evening, London. Allow me first to apologize for this interruption. I do, like many of you, appreciate the comforts of every day routine — the security of the familiar, the tranquility of repetition. I enjoy them as much as any bloke. But in the spirit of commemoration, whereby those important events of the past, usually associated with someone&apos;s death or the end of some awful bloody struggle, are celebrated with a nice holiday, I thought we could mark this November the 5th, a day that is sadly no longer remembered, by taking some time out of our daily lives to sit down and have a little chat. There are of course those who do not want us to speak. I suspect even now, orders are being shouted into telephones, and men with guns will soon be on their way. Why? Because while the truncheon may be used in lieu of conversation, words will always retain their power. Words offer the means to meaning, and for those who will listen, the enunciation of truth. And the truth is, there is something terribly wrong with this country, isn&apos;t there? Cruelty and injustice, intolerance and oppression. And where once you had the freedom to object, to think and speak as you saw fit, you now have censors and systems of surveillance coercing your conformity and soliciting your submission. How did this happen? Who&apos;s to blame? Well certainly there are those more responsible than others, and they will be held accountable, but again truth be told, if you&apos;re looking for the guilty, you need only look into a mirror. I know why you did it. I know you were afraid. Who wouldn&apos;t be? War, terror, disease. There were a myriad of problems which conspired to corrupt your reason and rob you of your common sense. Fear got the best of you, and in your panic you turned to the now high chancellor, Adam Sutler. He promised you order, he promised you peace, and all he demanded in return was your silent, obedient consent. Last night I sought to end that silence. Last night I destroyed the Old Bailey, to remind this country of what it has forgotten. More than 400 years ago a great citizen wished to embed the fifth of November forever in our memory. His hope was to remind the world that fairness, justice, and freedom are more than words, they are perspectives. So if you&apos;ve seen nothing, if the crimes of this government remain unknown to you then I would suggest that you allow the fifth of November to pass unmarked. But if you see what I see, if you feel as I feel, and if you would seek as I seek, then I ask you to stand beside me one year from tonight, outside the gates of Parliament, and together we shall give them a fifth of November that shall never, ever be forgot&quot; (&quot;V for Vendetta (Film)”).</span><br></pre></td></tr></table></figure><h4 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis:"></a>Analysis:</h4><p><code>”Because while the truncheon may be used in lieu of conversation, words will always retain their power&quot; (&quot;V for Vendetta (Film)”).</code></p><ul><li>Comparable to the Thought Police in 1984 or the Gestapo from Nazi Germany. Both used force to create submission, but both powers feared words more than anything else. The fought to destroy any writings that conflicted with beliefs.</li><li>The Department of Homeland Security in Little Brother uses force in order to create control over the city of San Francisco. Marcus realizes that words do indeed have more power than brute force, thus manipulating the Xnet in a form of nonviolent protest. Gandhi used the same tactics in his protest against Great Britain, he is quoted, “Non-violence is the greatest force at the disposal of mankind. It is mightier than the mightiest weapon of destruction devised by the ingenuity of man.” (“V for Vendetta (Film)”)</li></ul><p><code>”And where once you had the freedom to object, to think and speak as you saw fit, you now have censors and systems of surveillance coercing your conformity and soliciting your submission&quot; (&quot;V for Vendetta (Film)”).</code></p><ul><li>As in both Little Brother and 1984, the ability to think or reject is removed by the government. Both are then replaced with, “censors and systems of surveillance” (“V for Vendetta (Film)”).</li><li>The “soliciting” of and individual’s submission is a main theme in 1984, as Winston find himself “solicited” by Big Brother. The posters and telescreens are constant reminders of his presence, and as Winston says, “The presence of Big Brother was not just known, you were reminded of it ever time you walked outside your home” (Orwell, 1984, 101).</li></ul><p><code>”if you&#39;re looking for the guilty, you need only look into a mirror.&quot; (&quot;V for Vendetta (Film)”)</code></p><ul><li>During the collapse of societies, there is always the attempt to create a scapegoat. Usually the scapegoat is the minorities of the community. An example of this would be in Hitler’s Germany. Hitler was able to create an accepted blame on the Jews for the depression, and used the support behind the scapegoat in order to rise to power. After Hitler had been defeated, many citizen of Germany claimed that they had no idea of what was happening to the Jews and other minorities in their society. Yet, they were just blinded by their faith in Hitler and were unable to blame themselves.</li><li>In society today, people look for someone to blame for economic, social, and political problems. All of these problems are cause by each and every individual in the society. Whether it be overspending, close-mindedness, or even the lack of participation in a democratic government.</li></ul><p><code>”His hope was to remind the world that fairness, justice, and freedom are more than words, they are perspectives.&quot; (&quot;V for Vendetta (Film)”)</code></p><ul><li>Regardless of how much censorship is implemented on a society, fairness, justice, and freedom will be everlasting. Perspectives cannot be destroyed and cannot be forgotten.</li></ul>]]></content>
      
      <categories>
          
          <category> voice </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx开启HTTPS反向代理访问Jira失败</title>
      <link href="/issues/jira-over-https.html"/>
      <url>/issues/jira-over-https.html</url>
      <content type="html"><![CDATA[<p>使用的Jira 版本：v7.1.1，之前一直是http访问，在买完证书，部署好https访问时，界面一直在提醒：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">We&apos;ve detected a potential problem with JIRA&apos;s Dashboard configuration that your administrator can correct. Click here to learn more</span><br><span class="line"> </span><br><span class="line">We&apos;ve detected a potential problem with JIRA&apos;s Dashboard configuration that your administrator can correct. Hide</span><br><span class="line">Dashboard Diagnostics: Mismatched URL Scheme</span><br><span class="line"> </span><br><span class="line">JIRA is reporting that it is using the URL scheme &apos;http&apos;, which does not match the scheme used to run these diagnostics, &apos;https&apos;. This is known to cause JIRA to construct URLs using an incorrect hostname, which will result in errors in the dashboard, among other issues.</span><br><span class="line"> </span><br><span class="line">The most common cause of this is the use of a reverse-proxy HTTP(S) server (often Apache or IIS) in front of the application server running JIRA. While this configuration is supported, some additional setup might be necessary in order to ensure that JIRA detects the correct scheme.</span><br><span class="line"> </span><br><span class="line">The following articles describe the issue and the steps you should take to ensure that your web server and app server are configured correctly:</span><br><span class="line"> </span><br><span class="line">    Gadgets do not display correctly after upgrade to JIRA 4.0</span><br><span class="line">    Integrating JIRA with Apache</span><br><span class="line">    Integrating JIRA with Apache using SSL</span><br><span class="line"> </span><br><span class="line">If you believe this diagnosis is in error, or you have any other questions, please contact Atlassian Support.</span><br><span class="line"> </span><br><span class="line">Detailed Error</span><br><span class="line"> </span><br><span class="line">com.atlassian.gadgets.dashboard.internal.diagnostics.UrlSchemeMismatchException: Detected URL scheme, &apos;http&apos;, does not match expected scheme &apos;https&apos;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>经过多次尝试之后，发现一共需要修改两处。</p><p>第一处是修改系统界面中的BaseURL，把http换为https，如图:</p><p><img src="/images/jira/BaseURL.jpg" alt="BaseURL"></p><p>第二处是修改Jira自带的tomcat配置文件（默认位置：<code>/usr/local/atlassian/jira/conf/server.xml</code>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    &lt;Service name=&quot;Catalina&quot;&gt;</span><br><span class="line">        &lt;Connector port=&quot;8080&quot;</span><br><span class="line">                   maxThreads=&quot;150&quot;</span><br><span class="line">                   minSpareThreads=&quot;25&quot;</span><br><span class="line">                   maxSpareThreads=&quot;75&quot;</span><br><span class="line">                   connectionTimeout=&quot;20000&quot;</span><br><span class="line">                   enableLookups=&quot;false&quot;</span><br><span class="line">                   maxHttpHeaderSize=&quot;8192&quot;</span><br><span class="line">                   protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">                   useBodyEncodingForURI=&quot;true&quot;</span><br><span class="line">                   redirectPort=&quot;8443&quot;</span><br><span class="line">                   acceptCount=&quot;100&quot;</span><br><span class="line">                   disableUploadTimeout=&quot;true&quot;</span><br><span class="line"> </span><br><span class="line">&lt;!-- Lines added to solve the URL scheme mismatch --&gt;</span><br><span class="line">                    scheme=&quot;https&quot;</span><br><span class="line">                    proxyName=&quot;example.org&quot;</span><br><span class="line">                    proxyPort=&quot;443&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><blockquote><p>把proxyName换成你的jira访问域名就可以了</p></blockquote>]]></content>
      
      <categories>
          
          <category> issues </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jira </tag>
            
            <tag> Troubleshooting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FreeIPA Client 端部署</title>
      <link href="/devops/install-freeipa-client.html"/>
      <url>/devops/install-freeipa-client.html</url>
      <content type="html"><![CDATA[<h3 id="新增IPA客户端主机"><a href="#新增IPA客户端主机" class="headerlink" title="新增IPA客户端主机"></a>新增IPA客户端主机</h3><h4 id="修改DNS服务器"><a href="#修改DNS服务器" class="headerlink" title="修改DNS服务器"></a>修改DNS服务器</h4><p>vim /etc/resolv.conf<br>把下面两行放最上面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search bd.example.com.cn</span><br><span class="line">nameserver 192.168.2.150</span><br></pre></td></tr></table></figure><h4 id="修改hosts文件中第二行旧的主机名（很重要）"><a href="#修改hosts文件中第二行旧的主机名（很重要）" class="headerlink" title="修改hosts文件中第二行旧的主机名（很重要）"></a>修改hosts文件中第二行旧的主机名（很重要）</h4><a id="more"></a><p>修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.8 tracking8.bd.example.com.cn</span><br></pre></td></tr></table></figure></p><h4 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname xxx.bd.example.com.cn</span><br></pre></td></tr></table></figure><h4 id="修改PS1变量"><a href="#修改PS1变量" class="headerlink" title="修改PS1变量"></a>修改PS1变量</h4><p>vim /etc/profile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PS1=&quot;[\u@\h \W]\\$ &quot;</span><br></pre></td></tr></table></figure></p><h4 id="安装ipa-client"><a href="#安装ipa-client" class="headerlink" title="安装ipa client"></a>安装ipa client</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ipa-client</span><br><span class="line"></span><br><span class="line">ipa-client-install --mkhomedir</span><br><span class="line"></span><br><span class="line">Realm: FUGETECH.COM.CN</span><br><span class="line">DNS Domain: example.com.cn</span><br><span class="line">IPA Server: ipa.example.com.cn</span><br><span class="line">BaseDN: dc=example,dc=com,dc=cn</span><br></pre></td></tr></table></figure><h4 id="开放系统limit值"><a href="#开放系统limit值" class="headerlink" title="开放系统limit值"></a>开放系统limit值</h4><p>在文件<code>/etc/security/limits.conf</code>末尾追加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line">* soft    nproc   65535</span><br><span class="line">* hard    nproc   65535</span><br></pre></td></tr></table></figure><h4 id="允许自动创建家目录-前面install时已创建，此处忽略"><a href="#允许自动创建家目录-前面install时已创建，此处忽略" class="headerlink" title="允许自动创建家目录(前面install时已创建，此处忽略)"></a>允许自动创建家目录(前面install时已创建，此处忽略)</h4><p>(如果安装时使用–mkhomedir选项，这一步可忽略)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authconfig --enablemkhomedir --update</span><br></pre></td></tr></table></figure></p><h4 id="admin被锁处理"><a href="#admin被锁处理" class="headerlink" title="admin被锁处理"></a>admin被锁处理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapmodify  -h localhost -D &quot;uid=admin,cn=users,cn=accounts&quot; -ZZ -x -W</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FreeIPA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FreeIPA Server 端部署</title>
      <link href="/devops/install-freeipa-server-on-centos.html"/>
      <url>/devops/install-freeipa-server-on-centos.html</url>
      <content type="html"><![CDATA[<h2 id="一、FreeIPA介绍"><a href="#一、FreeIPA介绍" class="headerlink" title="一、FreeIPA介绍"></a>一、FreeIPA介绍</h2><p>FreeIPA是Redhat公司推出的开源软件，是一款集成的安全信息管理解决方案。其特点如下：</p><ul><li>集成多种服务（389 Directory Server, MIT Kerberos, NTP, DNS, Dogtag certificate system, SSSD），简化安装配置</li><li>提供WEB、命令行两种管理工具，方便管理</li><li>多主复制，可扩展，高可用</li><li>接口丰富，支持CLI、 Web UI、 XMLRPC、JSONRPC API、Python SDK</li></ul><a id="more"></a><p><img src="/images/freeipa/free-ipa-server.png" alt="FreeIPA Server"></p><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ul><li>MIT KDC：IPA 认证的核心</li><li>389 Directory Server：轻量级目录访问</li><li>Dogtag Certificate System：一款认证系统,提供强大的安全框架来确保用户的身份以及通讯的私密性</li><li>SSSD：SSSD是红帽企业版Linux6中新加入的一个守护进程，该进程可以用来访问多种验证服务器，如LDAP，Kerberos等，并提供授权。SSSD是介于本地用户和数据存储之间的进程，本地客户端首先连接SSSD，再由SSSD联系外部资源提供者(一台远程服务器)</li></ul><h3 id="安装前检查："><a href="#安装前检查：" class="headerlink" title="安装前检查："></a>安装前检查：</h3><ul><li>使用ntp同步时间</li><li>防火墙关闭，或开放以下端口：TCP(80, 443,389, 636,88, 464) UDP(88, 464,123)</li><li>配置hosts文件，设置完全合格的主机名（如：192.168.1.1 freeipa.fugetech.com.cn  freeipa）</li></ul><h2 id="二、FreeIPA服务端安装"><a href="#二、FreeIPA服务端安装" class="headerlink" title="二、FreeIPA服务端安装"></a>二、FreeIPA服务端安装</h2><p>FreeIPA的安装比较简单，首先安装软件包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ipa-server bind-dyndb-ldap ipa-server-dns</span><br></pre></td></tr></table></figure><p>安装完成后，执行安装命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipa-server-install</span><br></pre></td></tr></table></figure><p>开始安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">The log file for this installation can be found in /var/log/ipaserver-install.log</span><br><span class="line">================================================================</span><br><span class="line">This program will set up the IPA Server.</span><br><span class="line">This includes:</span><br><span class="line">  * Configure a stand-alone CA (dogtag) for certificate management</span><br><span class="line">  * Configure the Network Time Daemon (ntpd)</span><br><span class="line">  * Create and configure an instance of Directory Server</span><br><span class="line">  * Create and configure a Kerberos Key Distribution Center (KDC)</span><br><span class="line">  * Configure Apache (httpd)</span><br><span class="line">To accept the default shown in brackets, press the Enter key.</span><br><span class="line">Enter the fully qualified domain name of the computer</span><br><span class="line">on which you&apos;re setting up server software. Using the form</span><br><span class="line">&lt;hostname&gt;.&lt;domainname&gt;</span><br><span class="line">Example: master1.douyu.com.</span><br><span class="line">Server host name [master1.douyu.com]:       #回车确认</span><br><span class="line"></span><br><span class="line">The domain name has been determined based on the host name.</span><br><span class="line">Please confirm the domain name [master1.douyu]: #回车确认</span><br><span class="line"></span><br><span class="line">The kerberos protocol requires a Realm name to be defined.</span><br><span class="line">This is typically the domain name converted to uppercase.</span><br><span class="line">Please provide a realm name [master1.douyu]:#回车确认</span><br><span class="line"></span><br><span class="line">Certain directory server operations require an administrative user.</span><br><span class="line">This user is referred to as the Directory Manager and has full access</span><br><span class="line">to the Directory for system management tasks and will be added to the</span><br><span class="line">instance of directory server created for IPA.</span><br><span class="line">The password must be at least 8 characters long.</span><br><span class="line"></span><br><span class="line">Directory Manager password:douyu123 #设置活动目录管理密码</span><br><span class="line">Password (confirm):redn.net</span><br><span class="line">The IPA server requires an administrative user, named &apos;admin&apos;.</span><br><span class="line">This user is a regular system account used for IPA server administration.</span><br><span class="line"></span><br><span class="line">IPA admin password:redn.net #设置IPA admin管理密码</span><br><span class="line">Password (confirm):redn.net</span><br><span class="line">The IPA Master Server will be configured with:</span><br><span class="line">Hostname:      master1.douyu.com</span><br><span class="line">IP address:    172.24.30.100</span><br><span class="line">Domain name:   example.com</span><br><span class="line">Realm name:    EXAMPLE.COM</span><br><span class="line">Continue to configure the system with these values? [no]:yes    #输入yes 确认配置</span><br><span class="line">The following operations may take some minutes to complete.</span><br><span class="line">Please wait until the prompt is returned.</span><br><span class="line"></span><br><span class="line">…………………………#等待安装完成</span><br><span class="line">Sample zone file for bind has been created in /tmp/sample.zone.Jd9cwk.db</span><br><span class="line">Restarting the web server</span><br><span class="line">==============================================================</span><br><span class="line">Setup complete</span><br><span class="line">Next steps:</span><br><span class="line">        1. You must make sure these network ports are open:</span><br><span class="line">                TCP Ports:</span><br><span class="line">                  * 80, 443: HTTP/HTTPS</span><br><span class="line">                  * 389, 636: LDAP/LDAPS</span><br><span class="line">                  * 88, 464: kerberos</span><br><span class="line">                UDP Ports:</span><br><span class="line">                  * 88, 464: kerberos</span><br><span class="line">                  * 123: ntp</span><br><span class="line">        2. You can now obtain a kerberos ticket using the command: &apos;kinit admin&apos;</span><br><span class="line">           This ticket will allow you to use the IPA tools (e.g., ipa user-add)</span><br><span class="line">           and the web user interface.</span><br><span class="line">Be sure to back up the CA certificate stored in /root/cacert.p12</span><br><span class="line">This file is required to create replicas. The password for this</span><br><span class="line">file is the Directory Manager password</span><br></pre></td></tr></table></figure><p>安装完成后，打开浏览器，输入：https://<freeipa server="" ip="">/ 地址，即可打开web管理界面。</freeipa></p>]]></content>
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FreeIPA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>collectd</title>
      <link href="/monitoring/collectd.html"/>
      <url>/monitoring/collectd.html</url>
      <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Collecting and visualizing data is an important way to make informed decisions about your servers and projects.</p><p>In a previous guide, we discussed how to install and configure Graphite to visualize data on our servers. However, we didn’t have a good way of collecting or even passing data into Graphite.</p><p>In this guide, we’ll discuss the installation and use of <code>collectd</code>, a system statistics gatherer that can collect and organize metrics about your server and running services.</p><p>We will show you how to install and configure collectd to pass data into Graphite to render. We will assume that you have Graphite up and running on an Ubuntu 14.04 server as we showed you in the last guide.<br><a id="more"></a></p><h2 id="Install-Collectd"><a href="#Install-Collectd" class="headerlink" title="Install Collectd"></a>Install Collectd</h2><p>The first thing we are going to do is install collectd. We can get this from the default repositories.</p><p>Refresh the local package index and then install by typing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install collectd collectd-utils</span><br></pre></td></tr></table></figure><p>This will install the daemon and a helper control interface. We still need to configure it so that it knows to pass the data it collects to Graphite.</p><h2 id="Configure-Collectd"><a href="#Configure-Collectd" class="headerlink" title="Configure Collectd"></a>Configure Collectd</h2><p>Begin by opening the collectd configuration file in your editor with root privileges:</p><p>sudo nano /etc/collectd/collectd.conf<br>The first thing that we should set is the hostname of the machine that we are on. Collectd can be used to send information to a remote Graphite server, but we are using this on the same machine for this guide. You can choose whatever name you’d like:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hostname &quot;graph_host&quot;</span><br></pre></td></tr></table></figure></p><p>If you have a real domain name configured, you can skip this and just leave toe <code>FQDNLookup</code> so that the server will use the DNS system to get the proper domain.</p><p>You may notice there is a parameter for “Interval”, which is the interval that collectd waits before querying data on the host. This is set by default to 10 seconds. If you followed along in the Graphite article, you will notice that this is the usual shortest interval for Graphite to track stats. These two values must match for data to be recorded reliably.</p><p>Next, we get right into the services that Collectd will gather information about. Collectd does this through the use of plugins. Most of the plugins are used to read information from the system, but plugins are also used to define where to send information. Graphite is one of these write plugins.</p><p>For this guide, we are going to ensure that the following plugins are enabled. You can comment out any other plugins, or you can work on configuring them correctly if you want to try them out on your host:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LoadPlugin apache</span><br><span class="line">LoadPlugin cpu</span><br><span class="line">LoadPlugin df</span><br><span class="line">LoadPlugin entropy</span><br><span class="line">LoadPlugin interface</span><br><span class="line">LoadPlugin load</span><br><span class="line">LoadPlugin memory</span><br><span class="line">LoadPlugin processes</span><br><span class="line">LoadPlugin rrdtool</span><br><span class="line">LoadPlugin users</span><br><span class="line">LoadPlugin write_graphite</span><br></pre></td></tr></table></figure></p><p>Some of these need configuration, and some of them will work fine out-of-the-box.</p><p>Continuing on down the file, we get to the configuration section of each plugin. Plugins are configured by defining a “block” for each configuration section. This is somewhat similar to how Apache compartmentalizes directives within blocks. We only will be taking a look at a few of these, since most of our plugins will work fine the way they are.</p><p>We enabled the Apache plugin because we have Apache installed to serve Graphite. We can configure the Apache plugin with a simple section that looks like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Plugin apache&gt;</span><br><span class="line">    &lt;Instance &quot;Graphite&quot;&gt;</span><br><span class="line">        URL &quot;http://domain_name_or_IP/server-status?auto&quot;</span><br><span class="line">        Server &quot;apache&quot;</span><br><span class="line">    &lt;/Instance&gt;</span><br><span class="line">&lt;/Plugin&gt;</span><br></pre></td></tr></table></figure></p><p>In a production environment, you may wish to keep the server stats protected behind an authentication layer. You can look at the commented code in this section of the file to see how that would work. For simplicity’s sake, we are going to demonstrate an open setup that is not authenticated.</p><p>We will be creating the <code>server-status</code> page for Apache that provides us with the details we need in a bit.</p><p>For the df plugin, which tells us how full our disks are, we can add a simple configuration that looks like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Plugin df&gt;</span><br><span class="line">    Device &quot;/dev/vda&quot;</span><br><span class="line">    MountPoint &quot;/&quot;</span><br><span class="line">    FSType &quot;ext3&quot;</span><br><span class="line">&lt;/Plugin&gt;</span><br></pre></td></tr></table></figure></p><p>You should point the device to the device name of the drive on your system. You can find this by typing the command in the terminal:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Filesystem     1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/vda        61796348 1766820  56867416   4% /</span><br><span class="line">none                   4       0         4   0% /sys/fs/cgroup</span><br><span class="line">udev             2013364      12   2013352   1% /dev</span><br><span class="line">tmpfs             404836     340    404496   1% /run</span><br><span class="line">none                5120       0      5120   0% /run/lock</span><br><span class="line">none             2024168       0   2024168   0% /run/shm</span><br><span class="line">none              102400       0    102400   0% /run/user</span><br></pre></td></tr></table></figure><p>Choose the networking interface you wish to monitor:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Plugin interface&gt;</span><br><span class="line">    Interface &quot;eth0&quot;</span><br><span class="line">    IgnoreSelected false</span><br><span class="line">&lt;/Plugin&gt;</span><br></pre></td></tr></table></figure></p><p>Finally, we come to the Graphite plugin. This will tell collectd how to connect to our Graphite instance. Make the section look something like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Plugin write_graphite&gt;</span><br><span class="line">    &lt;Node &quot;graphing&quot;&gt;</span><br><span class="line">        Host &quot;localhost&quot;</span><br><span class="line">        Port &quot;2003&quot;</span><br><span class="line">        Protocol &quot;tcp&quot;</span><br><span class="line">        LogSendErrors true</span><br><span class="line">        Prefix &quot;collectd.&quot;</span><br><span class="line">        StoreRates true</span><br><span class="line">        AlwaysAppendDS false</span><br><span class="line">        EscapeCharacter &quot;_&quot;</span><br><span class="line">    &lt;/Node&gt;</span><br><span class="line">&lt;/Plugin&gt;</span><br></pre></td></tr></table></figure></p><p>This tells our daemon how to connect to Carbon in order to pass off its data. We specify that it should look to the local computer on port 2003, which Carbon uses to listen for TCP connections.</p><p>Next, we tell it to use that protocol to reliably hand off the data to Carbon. We tell it to log errors about the hand off and then set the prefix for the data. Since we end this value with a dot, all of the collectd stats for this host will be stored in a “collectd” directory.</p><p>The store rates determines whether stats will be converted to gauges before being passed. The append data source line would append the node name to our metrics if enabled. The escape character determines how certain values with dots in them are converted to avoid Carbon from splitting them into directories.</p><p>Save and close the file when you are finished.</p><h2 id="Configure-Apache-to-Report-Stats"><a href="#Configure-Apache-to-Report-Stats" class="headerlink" title="Configure Apache to Report Stats"></a>Configure Apache to Report Stats</h2><p>In our configuration file, we enabled Apache stats tracking. We still need to configure Apache to allow this though.</p><p>In the Apache virtual hosts file that we have enabled for Graphite, we can add a simple location block that will tell Apache to report stats.</p><p>Open the file in your text editor:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apache2/sites-available/apache2-graphite.conf</span><br></pre></td></tr></table></figure></p><p>Below the “content” location block, we are going to add another block so that Apache will serve statistics at the /server-status page. Add the following section:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Alias /content/ /usr/share/graphite-web/static/</span><br><span class="line">    &lt;Location &quot;/content/&quot;&gt;</span><br><span class="line">        SetHandler None</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Location &quot;/server-status&quot;&gt;</span><br><span class="line">        SetHandler server-status</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/graphite-web_error.log</span><br></pre></td></tr></table></figure></p><p>Save and close the file when you are finished.</p><p>Now, we can reload Apache to get access to the new statistics:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 reload</span><br></pre></td></tr></table></figure></p><p>We can check to make sure everything is working correctly by visiting the page in our web browser. We just need to go to our domain, followed by /server-status:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://domain_name_or_IP/server-status</span><br></pre></td></tr></table></figure></p><p>You should see a page that looks something like this:</p><p><img src="https://assets.digitalocean.com/articles/collectd_statsd/server_stats.png" alt="server stats"></p><h2 id="Setting-the-Storage-Schema-and-Aggregation"><a href="#Setting-the-Storage-Schema-and-Aggregation" class="headerlink" title="Setting the Storage Schema and Aggregation"></a>Setting the Storage Schema and Aggregation</h2><p>Now that we have collectd configured to gather statistics about your services, we need to adjust Graphite to handle the data it receives correctly.</p><p>Let’s start by creating a storage schema definition. Open up the storage schema configuration file:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/carbon/storage-schemas.conf</span><br></pre></td></tr></table></figure></p><p>Inside, we need to add a definition that will dictate how long the information is kept, and how detailed the data should be at various levels.</p><p>We will tell Graphite to store collectd information at intervals of ten seconds for one day, at one minute for seven days, and intervals of ten minutes for one year.</p><p>This will give us a good balance between detailed information for recent activity and general trends over the long term. Collectd passes its metrics starting with the string <code>collectd</code>, so we will match that pattern.</p><p>The policy we described can be added by adding these lines. Remember, add these <strong>above</strong> the default policy, or else they will never be applied:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[collectd]</span><br><span class="line">pattern = ^collectd.*</span><br><span class="line">retentions = 10s:1d,1m:7d,10m:1y</span><br></pre></td></tr></table></figure></p><p>Save and close the file when you are finished.</p><p>Reload the Services<br>Now that collectd is configured and Graphite knows how to handle its data, we can reload the services.</p><p>First, restart the Carbon service. It is a good idea to use the “stop” and then “start” command with a few seconds in between instead of the “restart” command. This makes sure that the data is completely flushed prior to the restart:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service carbon-cache stop          ## wait a few seconds here</span><br><span class="line">sudo service carbon-cache start</span><br></pre></td></tr></table></figure></p><p>After the Carbon service is up and running again, we can do the same thing with collectd. The service may not be running yet, but this will ensure that it handles the data correctly:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service collectd stop</span><br><span class="line">sudo service collectd start</span><br></pre></td></tr></table></figure></p><p>After this, you can visit your domain again, and you should see a new tree with your collectd information:</p><p><img src="https://assets.digitalocean.com/articles/collectd_statsd/collectd_tree.png" alt="collectd tree"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Our collectd configuration is complete and our stats are already being recorded! Now, we have a daemon configured to track our server and services.</p><p>We can configure or write additional plugins for collectd as the need arises. Additional servers with collectd can also send data to our Graphite server. Collectd is mainly used for collecting statistics about common services and your machines as a whole.</p><p>In the next article, we’ll set up StatsD, a service that can cache data before flushing it to Graphite. This will allow us us to work around the problem of data loss when sending stats too quickly that we described in the previous article. It will also give us with an interface to track statistics within our own programs and projects.</p>]]></content>
      
      <categories>
          
          <category> monitoring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> monitoring </tag>
            
            <tag> collectd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Deploy Seyren with Grafana on Ubuntu 14.04</title>
      <link href="/monitoring/seyren.html"/>
      <url>/monitoring/seyren.html</url>
      <content type="html"><![CDATA[<p><img src="https://i.imgur.com/Ae5gQJZ.png" height="45" width="200"></p><p>Seyren (<a href="http://en.wikipedia.org/wiki/Wikipedia:IPA_for_English#Key" target="_blank" rel="noopener">/ˈsaɪ.rʌn/</a>) 是一款基于Graphite的报警平台，它支持下面这些报警通知方式：</p><ul><li><a href="http://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol" target="_blank" rel="noopener">Email</a>, <a href="https://www.flowdock.com" target="_blank" rel="noopener">Flowdock</a>, <a href="https://www.hipchat.com" target="_blank" rel="noopener">HipChat</a>, <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol" target="_blank" rel="noopener">HTTP</a>, <a href="http://hubot.github.com" target="_blank" rel="noopener">Hubot</a>, <a href="https://github.com/RJ/irccat" target="_blank" rel="noopener">IRCcat</a>, <a href="http://www.pagerduty.com" target="_blank" rel="noopener">PagerDuty</a>, <a href="https://pushover.net" target="_blank" rel="noopener">Pushover</a>, <a href="http://www.slf4j.org" target="_blank" rel="noopener">SLF4J</a>, <a href="https://www.slack.com" target="_blank" rel="noopener">Slack</a>, <a href="http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol" target="_blank" rel="noopener">SNMP</a>, <a href="https://www.twilio.com/" target="_blank" rel="noopener">Twilio</a></li></ul><a id="more"></a><p><a href="http://i.imgur.com/ahu3aM6.png" target="_blank" rel="noopener"><img src="https://i.imgur.com/13nR3YA.png" height="400" width="560"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Prerequisites-依赖软件"><a href="#Prerequisites-依赖软件" class="headerlink" title="Prerequisites/依赖软件"></a>Prerequisites/依赖软件</h3><ul><li>An instance of Graphite</li><li>MongoDB (<a href="http://docs.mongodb.org/manual/installation/#installation-guides Installing MongoDB" target="_blank" rel="noopener">Install instructions</a>)<br><strong>特别注意: Seyren目前只支持MongoDB 3.0版本，在安装的时候一定要特别注意使用正确的版本。</strong></li></ul><h3 id="Run-下载并运行软件包"><a href="#Run-下载并运行软件包" class="headerlink" title="Run/下载并运行软件包"></a>Run/下载并运行软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/scobal/seyren/releases/download/1.3.0/seyren-1.3.0.jar</span><br><span class="line">export GRAPHITE_URL=http://graphite.foohost.com:80</span><br><span class="line">java -jar seyren-1.3.0.jar</span><br><span class="line">open http://localhost:8080</span><br></pre></td></tr></table></figure><p>To run seyren on another port:<br>指定Seyren的端口，默认使用8080端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export SEYREN_URL=&quot;http://localhost:8081/seyren&quot;</span><br><span class="line">java -jar seyren-1.3.0.jar -httpPort=8081</span><br></pre></td></tr></table></figure><h3 id="邮件报警界面"><a href="#邮件报警界面" class="headerlink" title="邮件报警界面"></a>邮件报警界面</h3><p><img src="/images/seyren/seyren-mail.jpg" alt="报警邮件"></p><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><p>The following options can be supplied as system properties or environment variables.<br>有趣的是，Seyren的很多配置是通过定义环境变量的方式来实现的，并没有专门的配置文件来定义这些设置，具体的变量信息，参考下面的介绍：<br><strong>(注意：设置Base中的变量就能保证Seyren的正常运行)</strong></p><h5 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h5><ul><li><code>MONGO_URL</code> - The Mongo <a href="http://docs.mongodb.org/manual/reference/connection-string/" target="_blank" rel="noopener">connection string</a>. / MongoDB的地址，默认是：<code>mongodb://localhost:27017/seyren</code>；</li><li><code>SEYREN_URL</code> - The location of your Seyren instance. / Seyren服务器的地址. 默认是: <code>http://localhost:8080/seyren</code>；</li><li><code>SEYREN_LOG_PATH</code> - The path of seyren.log. Default: <code></code>. If a value is set, it must end with a ‘/‘. / Seyren日志seyren.log的存放路径，默认为空；如果要设置，则路径名称必须以”/“结尾；</li><li><code>SEYREN_LOG_FILE_LEVEL</code> - The level of messages logged to the <code>file</code> appender (must correspond to a <a href="http://logback.qos.ch/" target="_blank" rel="noopener">Logback</a> log level. So one of <code>trace</code>, <code>debug</code>, <code>info</code>, <code>warn</code> or <code>error</code>). Default: <code>info</code>. / 定义日志的记录级别，各级别如下：<code>trace</code>, <code>debug</code>, <code>info</code>, <code>warn</code> or <code>error</code>；</li><li><code>SEYREN_THREADS</code> - The number of pooled check threads to start. / Seyren发起查检请求的并发数，默认为<code>8</code>；</li><li><code>GRAPHS_ENABLE</code> - Show(true) or hide(false) graphs in check page. Default: <code>true</code>. / 设置是否在check页面显示监控图，默认为<code>true</code>即显示监控图表。</li></ul><p><strong>以下为一些非必须的扩展选项，可按需查看使用</strong></p><h5 id="Graphite"><a href="#Graphite" class="headerlink" title="Graphite"></a><a href="http://graphite.readthedocs.org/en/latest/" target="_blank" rel="noopener">Graphite</a></h5><ul><li><code>GRAPHITE_URL</code> - The location of your Graphite server. Default: <code>http://localhost:80</code></li><li><code>GRAPHITE_REFRESH</code> - The fixed period (in ms) between checks. Default: <code>60000</code></li><li><code>GRAPHITE_USERNAME</code> - The HTTP Basic auth username for the Graphite server. Default: <code></code></li><li><code>GRAPHITE_PASSWORD</code> - The HTTP Basic auth password for the Graphite server. Default: <code></code></li><li><code>GRAPHITE_KEYSTORE</code> - The HTTP KeyStore path for the https Graphite server. Default: <code></code></li><li><code>GRAPHITE_KEYSTORE_PASSWORD</code> - The HTTP KeyStore password for the HTTPS Graphite server. Default: <code></code></li><li><code>GRAPHITE_TRUSTSTORE</code> - The HTTP TrustStore path for the https Graphite server. Default: <code></code></li><li><code>GRAPHITE_CONNECTION_REQUEST_TIMEOUT</code> - The number of millisconds to wait to obtain a connection from the pool. Default: <code>0</code> (infinite)</li><li><code>GRAPHITE_CONNECT_TIMEOUT</code> - The number of milliseconds to wait to establish a connection. Default: <code>0</code> (infinite)</li><li><code>GRAPHITE_SOCKET_TIMEOUT</code> - The number of milliseconds to wait for request data. Default: <code>0</code> (infinite)</li></ul><h5 id="Email"><a href="#Email" class="headerlink" title="Email"></a><a href="http://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol" target="_blank" rel="noopener">Email</a></h5><ul><li><code>SMTP_HOST</code> - The smtp server to send email notifications from. Default: <code>localhost</code></li><li><code>SMTP_PORT</code> - The smtp server port. Default: <code>25</code></li><li><code>SMTP_FROM</code> - The from email address for sending out notifications. Default: <code>alert@seyren</code></li><li><code>SMTP_USERNAME</code> - The smtp server username if authenticated SMTP is used. Default: <code></code></li><li><code>SMTP_PASSWORD</code> - The smtp server password if authenticated SMTP is used. Default: <code></code></li><li><code>SMTP_PROTOCOL</code> - The smtp server protocol if authenticated SMTP is used. Default: <code>smtp</code></li></ul><h5 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h5><ul><li><code>HTTP_NOTIFICATION_URL</code> - The url for a resource that contains a POST HTTP Method. Default: <code></code></li></ul><h5 id="BigPanda-io"><a href="#BigPanda-io" class="headerlink" title="BigPanda.io"></a><a href="https://bigpanda.io" target="_blank" rel="noopener">BigPanda.io</a></h5><p>Use a <a href="https://a.bigpanda.io/#/app/integrations/alertsapi/instructions/alertsapi" target="_blank" rel="noopener">Big Panda App Key</a> as Target when adding a new subscription.</p><ul><li><code>BIGPANDA_NOTIFICATION_URL</code> - The url for a resource that contains a POST HTTP Method. Default: <code></code></li><li><code>BIGPANDA_AUTH_BEARER</code> - The Authorization Bearer header that is assigned to each customer by BigPanda. See <a href="https://a.bigpanda.io/#/app/integrations/alertsapi/instructions/alertsapi" target="_blank" rel="noopener">Alerts API integration</a> Default: <code></code></li></ul><h5 id="Flowdock"><a href="#Flowdock" class="headerlink" title="Flowdock"></a><a href="https://www.flowdock.com" target="_blank" rel="noopener">Flowdock</a></h5><p>Use a <a href="https://www.flowdock.com/account/tokens" target="_blank" rel="noopener">Flow API token</a> as Target when adding a new subscription.</p><ul><li><code>FLOWDOCK_EXTERNAL_USERNAME</code> - The username that messages will be sent from to a flow. Default: <code>Seyren</code></li><li><code>FLOWDOCK_TAGS</code> -  Special tags to add to all messages. Default: <code></code></li><li><code>FLOWDOCK_EMOJIS</code> - Mapping between state and emojis unicode. Default: <code></code></li></ul><h5 id="HipChat"><a href="#HipChat" class="headerlink" title="HipChat"></a><a href="https://www.hipchat.com" target="_blank" rel="noopener">HipChat</a></h5><ul><li><code>HIPCHAT_AUTHTOKEN</code> - The hipchat api auth token. Default: <code></code></li><li><code>HIPCHAT_USERNAME</code> - The username that messages will be sent from. Default: <code>Seyren Alert</code></li></ul><h5 id="Hubot"><a href="#Hubot" class="headerlink" title="Hubot"></a><a href="http://hubot.github.com" target="_blank" rel="noopener">Hubot</a></h5><ul><li><code>HUBOT_URL</code> - The location where Hubot is running. Default <code></code></li></ul><h5 id="IRCcat"><a href="#IRCcat" class="headerlink" title="IRCcat"></a><a href="https://github.com/RJ/irccat" target="_blank" rel="noopener">IRCcat</a></h5><ul><li><code>IRCCAT_HOST</code> - The hostname of the server where IRCcat is running. Default: <code>localhost</code></li><li><code>IRCCAT_PORT</code> - The port on which IRCcat is running. Default: <code>12345</code></li></ul><h5 id="PagerDuty"><a href="#PagerDuty" class="headerlink" title="PagerDuty"></a><a href="http://www.pagerduty.com" target="_blank" rel="noopener">PagerDuty</a></h5><ul><li>No system properties or environment variables here, but in “Subscriptions dialog box”, set the target field with a “Service API Key”.<br>To generate a “Service API Key”, see <a href="https://support.pagerduty.com/hc/en-us/articles/202828730-Adding-Services" target="_blank" rel="noopener">PagerDuty Support: Adding Services</a>, section “Use our API directly”.</li></ul><h5 id="Pushover"><a href="#Pushover" class="headerlink" title="Pushover"></a><a href="https://pushover.net" target="_blank" rel="noopener">Pushover</a></h5><ul><li><code>PUSHOVER_APP_API_TOKEN</code> - Your pushover App API Token</li></ul><h5 id="Real-time-metrics"><a href="#Real-time-metrics" class="headerlink" title="Real-time metrics"></a><a href="https://github.com/scobal/seyren/pull/142" target="_blank" rel="noopener">Real-time metrics</a></h5><ul><li><code>GRAPHITE_CARBON_PICKLE_ENABLE</code> - Enable a TCP server to listen Carbon relay <a href="http://graphite.readthedocs.org/en/latest/feeding-carbon.html" target="_blank" rel="noopener">pickle protocol</a>. Default: <code>false</code></li><li><code>GRAPHITE_CARBON_PICKLE_PORT</code> - The TCP server port. Default: <code>2004</code></li></ul><h5 id="Slack"><a href="#Slack" class="headerlink" title="Slack"></a><a href="https://www.slack.com" target="_blank" rel="noopener">Slack</a></h5><p>The target for a Slack subscription will be the channel name (including the <code>#</code>, for example <code>#channel</code>). You can optionally suffix the channel name with <code>!</code> and that will cause the alerts to include a <code>@channel</code> mention (for example <code>#channel!</code>).</p><ul><li><code>SLACK_TOKEN</code> - The Slack api auth token. Default: <code></code></li><li><code>SLACK_USERNAME</code> - The username that messages will be sent to slack. Default: <code>Seyren</code></li><li><code>SLACK_ICON_URL</code> - The user icon URL. Default: <code></code></li><li><code>SLACK_EMOJIS</code> - Mapping between state and emojis unicode. Default: <code></code></li></ul><h5 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a><a href="http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol" target="_blank" rel="noopener">SNMP</a></h5><ul><li><code>SNMP_HOST</code> - The SNMP host. Default: <code>localhost</code></li><li><code>SNMP_PORT</code> - The SNMP port. Default: <code>162</code></li><li><code>SNMP_COMMUNITY</code> - The SNMP  community. Default: <code>public</code></li><li><code>SNMP_OID</code> - The SNMP OID. Default: <code>1.3.6.1.4.1.32473.1</code></li></ul><h5 id="TEMPLATE"><a href="#TEMPLATE" class="headerlink" title="TEMPLATE"></a><a href="http://en.wikipedia.org/wiki/Apache_Velocity" target="_blank" rel="noopener">TEMPLATE</a></h5><ul><li><code>TEMPLATE_EMAIL_FILE_PATH</code> - The path to the velocity template used when emailing an alert. Seyren will first attempt to load from the class path, but will fall back to loading from the filesystem.  Default: <code>com/seyren/core/service/notification/email-template.vm&quot;</code></li><li><code>TEMPLATE_EMAIL_SUBJECT_FILE_PATH</code> - The path to the velocity template used for subject when emailing an alert. Seyren will first attempt to load from the class path, but will fall back to loading from the filesystem.  Default: <code>com/seyren/core/service/notification/email-subject-template.vm&quot;</code></li></ul><h5 id="Twilio"><a href="#Twilio" class="headerlink" title="Twilio"></a><a href="https://www.twilio.com/" target="_blank" rel="noopener">Twilio</a></h5><ul><li><code>TWILIO_ACCOUNT_SID</code> - The Twilio Account SID. Default <code></code></li><li><code>TWILIO_AUTH_TOKEN</code> - The Twilio Auth Token. Default <code></code></li><li><code>TWILIO_PHONE_NUMBER</code> - The Twilio phone number to use to send SMS. Default <code></code></li><li><code>TWILIO_URL</code> - The Twilio API URL. Mostly useful for testing. Default <code>https://api.twilio.com/2010-04-01/Accounts</code></li></ul><h5 id="Victorops"><a href="#Victorops" class="headerlink" title="Victorops"></a><a href="https://www.victorops.com/" target="_blank" rel="noopener">Victorops</a></h5><ul><li><code>VICTOROPS_REST_ENDPOINT</code> - The REST Endpoint given by Victorops. See <a href="http://victorops.force.com/knowledgebase/articles/Integration/Alert-Ingestion-API-Documentation/" target="_blank" rel="noopener">REST Integration</a> Default <code></code></li></ul><h5 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy)"></a><a href="http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/HttpClientBuilder.html#useSystemProperties(" target="_blank" rel="noopener">Proxy</a>)</h5><p>The Proxy settings are changed by using JAVA_OPTS. It important that you exclude your graphite server or you will proxy these requests also.</p><ul><li><code>JAVA_OPTS Example</code> JAVA_OPTS=”-server -Dhttps.proxyHost=<code>PROXYSERVER</code> -Dhttps.proxyPort=<code>PROXYPORT</code> -Dhttp.proxyHost=<code>PROXYSERVER</code> -Dhttp.proxyPort=<code>PROXYPORT</code> -Dhttp.nonProxyHosts=<code>GRAPHITESERVER|*YOURDOMAIN.COM|INTERNALHIPCHAT</code>“</li></ul><h2 id="Seyren-API"><a href="#Seyren-API" class="headerlink" title="Seyren API"></a>Seyren API</h2><p>See <a href="API.md">Seyren API</a></p><h2 id="Chef"><a href="#Chef" class="headerlink" title="Chef"></a>Chef</h2><p>You can use <a href="https://github.com/obazoud/chef-seyren" target="_blank" rel="noopener">Seyren Cookbook</a> to deploy Seyren with <a href="http://www.getchef.com/" target="_blank" rel="noopener">Chef</a>.</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>You can use the <a href="https://registry.hub.docker.com/u/usman/docker-seyren/" target="_blank" rel="noopener">Docker Seyren Image</a> to deploy a seyren instance in a <a href="https://docker.com" target="_blank" rel="noopener">docker</a> container.</p><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h2><p>You can use <code>docker-compose</code> to create containers and hack seyren.<br>First, you need to install <a href="https://docs.docker.com/compose/#installation-and-set-up" target="_blank" rel="noopener">Docker and Docker Compose</a>.<br>Then, you just need to start Docker Compose:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure></p><p>and open <a href="http://localhost:8080/seyren" target="_blank" rel="noopener">http://localhost:8080/seyren</a>.<br>Graphite is available on <a href="http://localhost:8081/" target="_blank" rel="noopener">http://localhost:8081/</a> with Basic Auth guest/guest.</p><h2 id="Init-script"><a href="#Init-script" class="headerlink" title="Init script"></a>Init script</h2><p><a href="https://github.com/wingZero21/Seyren-Init" target="_blank" rel="noopener">Seyren-Init</a> is an init.d script which allows you to start the service.</p><h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><p><a href="http://travis-ci.org/scobal/seyren" target="_blank" rel="noopener"><img src="https://secure.travis-ci.org/scobal/seyren.png?branch=master" alt="Build Status"></a></p><p>To run the acceptance tests with Maven:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean verify</span><br></pre></td></tr></table></figure><p>To run the integration tests with Maven:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean verify -Pkarma</span><br></pre></td></tr></table></figure><p>To fire-up the app using Maven and wait (meaning you can run the tests separately from your IDE):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean verify -Dwait</span><br></pre></td></tr></table></figure><p>You should then be able to browse to <code>http://localhost:8080/seyren</code> and have a play.</p><p>To package up a new jar file without running the tests:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvn package -DskipTests</span><br><span class="line"># Set environment variables as needed.</span><br><span class="line">java -jar seyren-web/target/seyren-web-*-war-exec.jar</span><br></pre></td></tr></table></figure><p>本文参考该Github项目中的Readme:<a href="https://github.com/scobal/seyren" target="_blank" rel="noopener">https://github.com/scobal/seyren</a></p>]]></content>
      
      <categories>
          
          <category> monitoring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> graphite </tag>
            
            <tag> grafana </tag>
            
            <tag> monitoring </tag>
            
            <tag> ubuntu </tag>
            
            <tag> seyren </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Deploy Graphite with Grafana on Ubuntu 14.04 (Part Ⅱ)</title>
      <link href="/monitoring/grafana.html"/>
      <url>/monitoring/grafana.html</url>
      <content type="html"><![CDATA[<p>Grafana 是 <a href="https://1byte.pro/monitoring/graphite.html">Graphite</a>仪表盘和图形编辑器。Grafana 是开源的、功能齐全的度量仪表盘和图形编辑器，支持 Graphite，InfluxDB 和 OpenTSDB。</p><p>Grafana 主要特性：</p><ul><li>灵活丰富的图形化选项；</li><li>可以混合多种风格；</li><li>支持白天和夜间模式；</li><li>多个数据源；</li><li>Graphite 和 InfluxDB 查询编辑器等等。<a id="more"></a><h2 id="Install-and-Configure-Grafana"><a href="#Install-and-Configure-Grafana" class="headerlink" title="Install and Configure Grafana"></a>Install and Configure Grafana</h2><strong>1.</strong> Add Grafana’s repository to sources.list:<br>添加安装Grafana所需的源<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;deb https://packagecloud.io/grafana/stable/debian/ wheezy main&apos; |  sudo tee -a /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li></ul><p><strong>2.</strong> Add the <a href="https://packagecloud.io/grafana" target="_blank" rel="noopener">Package Cloud</a> key to install signed packages:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://packagecloud.io/gpg.key | sudo apt-key add -</span><br></pre></td></tr></table></figure></p><p><strong>3.</strong> Update apt and install Grafana:<br>更新源，通过apt-get安装Grafana<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install grafana</span><br></pre></td></tr></table></figure></p><p><strong>4.</strong> Configure Grafana to use the PostgreSQL database created earlier:<br>配置Grafana使用之前创建的PostgreSQL数据库<br><em>File excerpt:</em> <strong>/etc/grafana/grafana.ini</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[database]</span><br><span class="line"># Either &quot;mysql&quot;, &quot;postgres&quot; or &quot;sqlite3&quot;, it&apos;s your choice</span><br><span class="line">type = postgres</span><br><span class="line">host = 127.0.0.1:5432</span><br><span class="line">name = grafana</span><br><span class="line">user = graphite</span><br><span class="line">password = graphiteuserpassword</span><br></pre></td></tr></table></figure></p><p><strong>5.</strong> Also in <code>/etc/grafana/grafana.ini</code>, configure the <code>domain</code> and <code>root_url</code>, and set a strong admin password and secret key:<br>配置WEB端口及帐号密码：<br><em>File excerpt:</em> **/etc/grafana/grafana.ini<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[server]</span><br><span class="line">protocol = http</span><br><span class="line">http_addr = 127.0.0.1</span><br><span class="line">http_port = 3000</span><br><span class="line">domain = example.com</span><br><span class="line">enforce_domain = true</span><br><span class="line">root_url = %(protocol)s://%(domain)s/</span><br><span class="line"></span><br><span class="line">[security]</span><br><span class="line">admin_user = admin</span><br><span class="line">admin_password = SecureAdminPass</span><br><span class="line">secret_key = somelongrandomstringkey</span><br></pre></td></tr></table></figure></p><p><strong>6.</strong> Enable proxy modules for Apache reverse proxying to work:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod proxy proxy_http xml2enc</span><br></pre></td></tr></table></figure></p><p><strong>7.</strong> Create an Apache site configuration file to proxy requests to Grafana. Remember to change <code>example.com</code> to your own domain:<br>通过Apache 使用80端口对Grafana进行访问<br><em>File excerpt:</em> <strong>/etc/apache2/sites-available/apache2-grafana.conf</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    ProxyPass / http://127.0.0.1:3000/</span><br><span class="line">    ProxyPassReverse / http://127.0.0.1:3000/</span><br><span class="line">    ServerName example.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p><strong>8.</strong> Enable Grafana’s site configuration with:<br>启用Grafana的Apache配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite apache2-grafana</span><br></pre></td></tr></table></figure></p><p><strong>9.</strong> Configure Grafana to run after boot and then start service:<br>设置Grafana开机启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d grafana-server defaults 95 10</span><br><span class="line">sudo service grafana-server start</span><br></pre></td></tr></table></figure></p><p>Restart Apache to load the new modules and configuration changes:<br>重启Apache，以应用最新配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure></p><p>At this point, you should be able to open your Linode’s domain or IP address in a browser to see Grafana’s login page.<br>至些，可以从浏览中通过访问主机80端口来访问Grafana界面。</p><h2 id="Add-a-Graphite-Data-Source-to-Grafana"><a href="#Add-a-Graphite-Data-Source-to-Grafana" class="headerlink" title="Add a Graphite Data Source to Grafana"></a>Add a Graphite Data Source to Grafana</h2><p>为Grafa添加数据源，即连接Graphite<br><strong>1.</strong> Log in into Grafana using the <code>admin</code> credentials you specified in <code>grafana.ini</code> above.<br>使用前面设置的帐号密码来登录Grafana，默认帐号密码是：admin/admin<br><strong>2.</strong> Click on <code>Data Sources</code> and select <code>Add new</code>. Fill in all the fields as shown in the screenshot below:<br><img src="https://www.linode.com/docs/assets/graphite_grafana_data_source.png" alt="Add Data Source dialog"></p><p>Click <strong>Save</strong> to create the new Data Source.<br><strong>3.</strong> Now, before creating a graph, add more test data for the test.count metric by again running:<br>在添加新的监控图表之前，生成一份新测试数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 4 6 8 16 2; do echo &quot;test.count $i `date +%s`&quot; | nc -q0 127.0.0.1 2003; sleep 6; done</span><br></pre></td></tr></table></figure></p><p><strong>4.</strong> Create a new dashboard by clicking the <strong>Home</strong> button and then <strong>+ New</strong>:<br>添加一个Dashboard:<br><img src="https://www.linode.com/docs/assets/graphite_grafana_new_dashboard.png" alt="Create new dashboard"></p><p><strong>5.</strong> Add a Graph panel to the newly created dashboard:<br>在新创建的dashboard中添加新图：<br><img src="https://www.linode.com/docs/assets/graphite_grafana_new_graph.png" alt="Create new graph panel"></p><p><strong>6.</strong> Edit the Graph panel properties by clicking the tab with the words <strong>no title (click here)</strong>. Then click <strong>Edit</strong>:<br>向图中添加数据<br><img src="https://www.linode.com/docs/assets/graphite_grafana_edit_graph.png" alt="Edit graph panel"></p><p><strong>7.</strong> Make sure the <strong>graphite</strong> data source you’ve created is chosen in the dropdown box at the bottom right (marked as 1 in the screenshot below). In the dropdown at the top right corner (marked as 2), choose <strong>Last 15 minutes</strong>.<br>Click <strong>select metric</strong>. Choose <strong>test</strong> and then <strong>count</strong> (marked as 3) to add the test metric you previously created. At this point, the sample data should appear on the graph.<br>Finally, click the <strong>Save</strong> button (marked as 4) to save the dashboard you just created.<br>选择需要监控的数据源。<br>一图胜千言。<br><img src="https://www.linode.com/docs/assets/graphite_grafana_edit_graph_add_metric.png" alt="Add test metric to the panel"></p><p>Grafana图片界面展示：<a href="http://play.grafana-zabbix.org/dashboard/db/grafana-zabbix-demo" target="_blank" rel="noopener">http://play.grafana-zabbix.org/dashboard/db/grafana-zabbix-demo</a></p><p>The pure English Version: <a href="https://www.linode.com/docs/uptime/monitoring/deploy-graphite-with-grafana-on-ubuntu-14-04" target="_blank" rel="noopener">https://www.linode.com/docs/uptime/monitoring/deploy-graphite-with-grafana-on-ubuntu-14-04</a></p><h2 id="More-Information"><a href="#More-Information" class="headerlink" title="More Information"></a>More Information</h2><p>You may wish to consult the following resources for additional information on this topic. While these are provided in the hope that they will be useful, please note that we cannot vouch for the accuracy or timeliness of externally hosted materials.<br>下面是一引起扩展资料，有兴趣的可以做为扩展阅读。</p><ul><li><a href="http://graphite.readthedocs.org/en/latest/install.html" target="_blank" rel="noopener">Installing Graphite</a></li><li><a href="http://graphite.readthedocs.org/en/latest/config-carbon.html" target="_blank" rel="noopener">Configuring Carbon</a></li><li><a href="http://docs.grafana.org/installation/debian/" target="_blank" rel="noopener">Installing Grafana on Debian/Ubuntu</a></li><li><a href="http://docs.grafana.org/datasources/graphite/" target="_blank" rel="noopener">Adding Graphite data source to Grafana</a></li></ul>]]></content>
      
      <categories>
          
          <category> monitoring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> graphite </tag>
            
            <tag> grafana </tag>
            
            <tag> monitoring </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Deploy Graphite with Grafana on Ubuntu 14.04(Part Ⅰ)</title>
      <link href="/monitoring/graphite.html"/>
      <url>/monitoring/graphite.html</url>
      <content type="html"><![CDATA[<p><a href="http://graphite.readthedocs.org/en/latest/index.html" target="_blank" rel="noopener">Graphite</a>是一款企业级的监控工具，其采用Django框架，可以运行在廉价的硬件资源之上。Graphite采用简单的文本协议和绘图功能可以方便地使用在任何操作系统上。本文将以Ubuntu 14.04为系统环境，就Graphite与<a href="http://graphite.readthedocs.org/en/latest/index.html" target="_blank" rel="noopener">Grafana</a>的安装与协作做详细介绍。</p><h2 id="Before-You-Begin-热身准备"><a href="#Before-You-Begin-热身准备" class="headerlink" title="Before You Begin / 热身准备"></a>Before You Begin / 热身准备</h2><p><strong>1.</strong> Familiarize yourself with our Getting Started guide and complete the steps for setting your Linode’s hostname and timezone.<br>本文原文来自Linode官网，所以会看到Linode字样，不用理会，把它当成你的主机的就可以了<br><a id="more"></a><br><strong>2.</strong> This guide will use sudo wherever possible from an example account named graphite. Complete the sections of our Securing Your Server guide to create the graphite user, harden SSH access, remove unnecessary network services and set up a firewall. You may need to create additional firewall rules for your specific application.<br>本文默认使用普通用户进行安装部署<br><strong>3.</strong> Update your system:<br>开始前，系统需要做一下更新（非必须）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></table></figure></p><h2 id="Install-Apache-Python-Tools-and-Graphite"><a href="#Install-Apache-Python-Tools-and-Graphite" class="headerlink" title="Install Apache, Python Tools and Graphite"></a>Install Apache, Python Tools and Graphite</h2><p>Install the system packages required for working with Graphite:<br>安装Graphite本身及其依赖的一些工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential graphite-web graphite-carbon python-dev apache2 libapache2-mod-wsgi libpq-dev python-psycopg2</span><br></pre></td></tr></table></figure></p><p>During the installation of <code>graphite-carbon</code>, you will be asked if you want to remove the whisper database files should you ever uninstall Graphite. Answer <strong>No</strong> to this prompt. You can always remove the files later (which are located in <code>/var/lib/graphite/whisper</code>).<br>安装<code>graphite-carbon</code>的过程中，会提示你是要删除whisper数据库文件，回答No就好，我们可以后面随时手动删除这些文件；如果是新主机，回答Yes也没有问题。</p><h2 id="Configure-Carbon"><a href="#Configure-Carbon" class="headerlink" title="Configure Carbon"></a>Configure Carbon</h2><p><strong>1.</strong> Configure the retention rate for test metrics by adding a <code>[test]</code> block to Carbon’s <code>storage-schemas.conf</code> file. <em>This step is given for testing purposes only and can be safely skipped if you have no use to generate test metrics.</em></p><p>The retention times given below will save data every 5 seconds for 3 hours, and a separate set of data from that aggregated sample every 1 minute for 1 day.<br>这个文件设置了Graphie接收数据的频率和保存时间。我们向其中添加<code>[test]</code>字段用于测试。</p><p><em>File excerpt:</em> <strong>/etc/carbon/storage-schemas.conf</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[carbon]</span><br><span class="line">pattern = ^carbon\.</span><br><span class="line">retentions = 60:90d</span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line">pattern = ^test\.</span><br><span class="line">retentions = 5s:3h,1m:1d  #第一保存配置是，保存每5秒一次的数据3小时，第二保存配置是保存第分钟取一次的数据一天</span><br><span class="line"></span><br><span class="line">[default_1min_for_1day]</span><br><span class="line">pattern = .*</span><br><span class="line">retentions = 60s:1d</span><br></pre></td></tr></table></figure></p><p>For more information on how to configure Carbon storage, see the section <a href="http://graphite.readthedocs.org/en/latest/config-carbon.html#storage-schemas-conf" target="_blank" rel="noopener">torage-schemas.conf</a> in Graphite’s documentation.</p><p><strong>2.</strong> Copy the default aggregation configuration to <code>/etc/carbon</code> so we can configure our own settings:<br>产生文件<code>storage-aggregation.conf</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/doc/graphite-carbon/examples/storage-aggregation.conf.example /etc/carbon/storage-aggregation.conf</span><br></pre></td></tr></table></figure></p><p><code>storage-aggregation.conf</code> describes aggregation policies Carbon uses to produce less detailed metrics, such as the 1m:1d retention in the [test] block added above. By default, only the average metric value is taken, which will result in data loss when, for example, you need maximum and minimum values. For this reason, <code>[min]</code>,<code>[max]</code> and <code>[sum]</code> sections are found in the configuration file.<br>文件<code>storage-aggregation.conf</code>定义了Carbon聚合数据的策略</p><p><strong>3.</strong>Third, Enable Carbon’s cache to run on boot:<br>设置Carbon-cahce开机启动</p><p><em>File excerpt:</em> <strong>/etc/default/graphite-carbon</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CARBON_CACHE_ENABLED=true</span><br></pre></td></tr></table></figure></p><p>Start the Carbon cache service:<br>启动：Carbon cache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service carbon-cache start</span><br></pre></td></tr></table></figure></p><h2 id="Install-and-Configure-PostgreSQL"><a href="#Install-and-Configure-PostgreSQL" class="headerlink" title="Install and Configure PostgreSQL"></a>Install and Configure PostgreSQL</h2><p>grephit-web依赖PosetgreSQL数据库<br><strong>1.</strong> Install PostgreSQL for the graphite-web application:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install postgresql</span><br></pre></td></tr></table></figure></p><p><strong>2.</strong> Change to the <code>postgres</code> user and create a database user for Graphite:<br>为Graphite创建数据库用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - postgres</span><br><span class="line">createuser graphite --pwprompt</span><br></pre></td></tr></table></figure></p><p>You will be asked to provide a password for the new database user. After that, create the databases <code>graphite</code> and <code>grafana</code> with the system’s <code>graphite</code> user as the owner:<br>使用刚创建的用户<code>graphite</code>创建两个数据库：<code>graphite</code>和<code>grafana</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">createdb -O graphite graphite</span><br><span class="line">createdb -O graphite grafana</span><br></pre></td></tr></table></figure></p><p><strong>3.</strong> When finished configuring the PostgreSQL databases, change back to the graphite user:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - graphite</span><br></pre></td></tr></table></figure></p><h2 id="Configure-Graphite"><a href="#Configure-Graphite" class="headerlink" title="Configure Graphite"></a>Configure Graphite</h2><p><strong>1.</strong> Update Graphite’s DATABASES dictionary definition with the settings for the PostgreSQL database created earlier:<br>配置Graphite使用刚才创建的数据库：<br><em>File excerpt:</em> <strong>/etc/graphite/local_settings.py</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">&apos;default&apos;: &#123;</span><br><span class="line">    &apos;NAME&apos;: &apos;graphite&apos;,</span><br><span class="line">    &apos;ENGINE&apos;: &apos;django.db.backends.postgresql_psycopg2&apos;,</span><br><span class="line">    &apos;USER&apos;: &apos;graphite&apos;,</span><br><span class="line">    &apos;PASSWORD&apos;: &apos;graphiteuserpassword&apos;,</span><br><span class="line">    &apos;HOST&apos;: &apos;127.0.0.1&apos;,</span><br><span class="line">    &apos;PORT&apos;: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>2.</strong> Also add the following lines to the end of the file:<br>在文件尾部添加下面几项配置：<br><em>File excerpt:</em> <strong>/etc/graphite/local_settings.py</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USE_REMOTE_USER_AUTHENTICATION = True</span><br><span class="line">TIME_ZONE = &apos;Your/Timezone&apos;</span><br><span class="line">SECRET_KEY = &apos;somelonganduniquesecretstring&apos;</span><br></pre></td></tr></table></figure></p><ul><li>TIME_ZONE is your Linode’s time zone, which will be used in graphs. For possible values, run <code>timedatectl</code> or see the TZ column in <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">Wikipedia’s timezone database</a>.<code>timedatectl</code>命令可以用来获取当前主机的时区信息</li><li>SECRET_KEY is a long and unique string used as a salt when hashing passwords.一个用来哈希加密密码的随机字符串，越随机越好。</li></ul><p><strong>3.</strong> Initialize the database with:<br>初始化数据库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo graphite-manage syncdb</span><br></pre></td></tr></table></figure></p><p><strong>4.</strong> Then answer the prompts to create a superuser account which will be used to access Graphite’s web interface.</p><h2 id="Configure-Apache-for-Graphite"><a href="#Configure-Apache-for-Graphite" class="headerlink" title="Configure Apache for Graphite"></a>Configure Apache for Graphite</h2><p>配置Apache用于web访问Graphite<br><strong>1.</strong> Copy Graphite’s Apache config template into Apache’s sites-available directory:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/graphite-web/apache2-graphite.conf /etc/apache2/sites-available</span><br></pre></td></tr></table></figure></p><p><strong>2.</strong> Change Graphite’s port from 80 to 8080 (port 80 will be used for Grafana later).<br>使用8080端口来访问Graphite<br><em>File excerpt:</em> <strong>/etc/apache2/sites-available/apache2-graphite.conf</strong><br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:<span class="number">8080</span>&gt;</span><br></pre></td></tr></table></figure></p><p><strong>3.</strong> Make sure Apache is listening on port 8080. Add <code>Listen 8080</code> after <code>Listen 80</code> in <code>ports.conf</code>:<br>配置Apache监听8080端口：<br><em>File excerpt:</em> <strong>/etc/apache2/ports.conf</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Listen 80</span><br><span class="line">Listen 8080</span><br></pre></td></tr></table></figure></p><p><strong>4.</strong> Disable the default Apache site to avoid conflicts:<br>关闭默认页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2dissite 000-default</span><br></pre></td></tr></table></figure></p><p><strong>5.</strong> Enable Graphite’s virtual site:<br>开启Graphite虚拟站点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite apache2-graphite</span><br></pre></td></tr></table></figure></p><p><strong>6.</strong> Reload Apache to apply the changes:<br>Reload Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 reload</span><br></pre></td></tr></table></figure></p><p>Now you should be able to access Graphite by going to your Linode’s hostname or IP address using port 8080 in a web browser (ex: <code>example_domain.com:8080</code>). You’ll see the Graphite landing page as shown below:<br>现在可以通过访问所在主机的8080端口来查看Graphite页面了<br><img src="https://www.linode.com/docs/assets/graphite_landing_page.png" alt="Graphite landing page"></p><h2 id="Create-Sample-Data"><a href="#Create-Sample-Data" class="headerlink" title="Create Sample Data"></a>Create Sample Data</h2><p>生成测试数据<br><strong>1.</strong> Generate some test metrics with the following command:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 4 6 8 16 2; do echo &quot;test.count $i `date +%s`&quot; | nc -q0 127.0.0.1 2003; sleep 6; done</span><br></pre></td></tr></table></figure></p><p><strong>2.</strong> Wait for the command prompt to be returned. Refresh the page and you should see a new <code>test.count</code> metric in the tree on the left:<br><img src="https://www.linode.com/docs/assets/graphite_test_metric.png" alt="Graphite test metric"></p><p>This guide is published under a CC BY-ND 4.0 license.<br>The pure English Version: <a href="https://www.linode.com/docs/uptime/monitoring/deploy-graphite-with-grafana-on-ubuntu-14-04" target="_blank" rel="noopener">https://www.linode.com/docs/uptime/monitoring/deploy-graphite-with-grafana-on-ubuntu-14-04</a></p>]]></content>
      
      <categories>
          
          <category> monitoring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> graphite </tag>
            
            <tag> grafana </tag>
            
            <tag> monitoring </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python日期自然月加减实操</title>
      <link href="/python/date-of-python.html"/>
      <url>/python/date-of-python.html</url>
      <content type="html"><![CDATA[<h3 id="这段代码用于对数据库中两个表中不同形式的时间字段进行月份变更操作，月份的变更以自然月形式形式进行。"><a href="#这段代码用于对数据库中两个表中不同形式的时间字段进行月份变更操作，月份的变更以自然月形式形式进行。" class="headerlink" title="这段代码用于对数据库中两个表中不同形式的时间字段进行月份变更操作，月份的变更以自然月形式形式进行。"></a>这段代码用于对数据库中两个表中不同形式的时间字段进行月份变更操作，月份的变更以自然月形式形式进行。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># By Gavin</span></span><br><span class="line"><span class="comment"># Date: 20190909</span></span><br><span class="line"><span class="comment"># Decription: 实现日期的自然月相加减，比如8月31号加一个月是9月30，而不是9月31号或10月1号</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> math,datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_add_month_interval</span><span class="params">(dt,inter)</span>:</span></span><br><span class="line">    m=dt.month+inter<span class="number">-1</span></span><br><span class="line">    y=dt.year</span><br><span class="line">    y=dt.year+int(m/<span class="number">12</span>)</span><br><span class="line">    m=m % <span class="number">12</span> +<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (y,m)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_month_interval</span><span class="params">(dt,inter)</span>:</span></span><br><span class="line">    y,m=_add_month_interval(dt,inter)</span><br><span class="line">    y2,m2=_add_month_interval(dt,inter+<span class="number">1</span>)</span><br><span class="line">    maxD=( datetime.date(y2,m2,<span class="number">1</span>)-datetime.timedelta(days=<span class="number">1</span>) ).day</span><br><span class="line">    d= dt.day&lt;=maxD <span class="keyword">and</span> dt.day <span class="keyword">or</span> maxD</span><br><span class="line">    <span class="comment">#return datetime.date(y,m,d)</span></span><br><span class="line">    <span class="keyword">return</span>(y,m,d)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_year_interval</span><span class="params">(dt,inter)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> add_month_interval(dt,inter*<span class="number">12</span>)</span><br><span class="line"><span class="comment"># 上面三个函数与业务无关，可直接嫁接使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># inter为需要变更的月数，需要加一个月就写1，减两个月就写-2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_metric</span><span class="params">(inter)</span>:</span></span><br><span class="line">    conn=MySQLdb.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>,db=<span class="string">'gavin'</span>,port=<span class="number">3306</span>)</span><br><span class="line">    cur=conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">'select date from metric_impressions order by date desc'</span>) </span><br><span class="line">    <span class="comment">#此时获取到的结果为元组</span></span><br><span class="line">    results = cur.fetchall()</span><br><span class="line">    <span class="comment">#将元组转换为列表</span></span><br><span class="line">    result=list(results)</span><br><span class="line">    <span class="keyword">for</span> now_date <span class="keyword">in</span> result:</span><br><span class="line">        <span class="comment"># now_date[0]格式形如：2016-09-21 12:03:23</span></span><br><span class="line">        timeArray = time.strptime(str(now_date[<span class="number">0</span>]), <span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        <span class="comment"># time.strptime处理过的数据结构(元组)不能被重新赋值</span></span><br><span class="line">        <span class="comment"># 所以这里需要将其转化为列表</span></span><br><span class="line">        timeArray = list(timeArray)</span><br><span class="line">        dt = datetime.date(timeArray[<span class="number">0</span>],timeArray[<span class="number">1</span>],timeArray[<span class="number">2</span>])</span><br><span class="line">        timeArray[<span class="number">0</span>],timeArray[<span class="number">1</span>],timeArray[<span class="number">2</span>] = add_month_interval(dt,inter)</span><br><span class="line">        new_date = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, timeArray)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"new_date:&#123;&#125;     now_date:&#123;&#125;"</span>.format(new_date, now_date[<span class="number">0</span>])</span><br><span class="line">        sql = <span class="string">'update metric_impressions_hour set date="&#123;&#125;" where date="&#123;&#125;"'</span>.format(new_date, now_date[<span class="number">0</span>])</span><br><span class="line">        cur.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_compaign</span><span class="params">(inter)</span>:</span></span><br><span class="line">    conn=MySQLdb.connect(host=<span class="string">'localhost'</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>,db=<span class="string">'gavin'</span>,port=<span class="number">3306</span>)</span><br><span class="line">    cur=conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">'select data_date from campaign order by data_date desc'</span>)</span><br><span class="line">    results = cur.fetchall()</span><br><span class="line">    result=list(results)</span><br><span class="line">    <span class="keyword">for</span> now_date <span class="keyword">in</span> result:</span><br><span class="line">        <span class="comment"># now_date[0]格式形如：20160921</span></span><br><span class="line">        timeArray = time.strptime(str(now_date[<span class="number">0</span>]), <span class="string">"%Y%m%d"</span>)</span><br><span class="line">        timeArray = list(timeArray)</span><br><span class="line">        dt = datetime.date(timeArray[<span class="number">0</span>],timeArray[<span class="number">1</span>],timeArray[<span class="number">2</span>])</span><br><span class="line">        timeArray[<span class="number">0</span>],timeArray[<span class="number">1</span>],timeArray[<span class="number">2</span>] = add_month_interval(dt,inter)</span><br><span class="line">        new_date = time.strftime(<span class="string">"%Y%m%d"</span>, timeArray)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"new_date:&#123;&#125;     now_date:&#123;&#125;"</span>.format(new_date, now_date[<span class="number">0</span>])</span><br><span class="line">        sql = <span class="string">'update campaign_stats set data_date="&#123;&#125;" where data_date="&#123;&#125;"'</span>.format(new_date, now_date[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">print</span> sql</span><br><span class="line">        cur.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">update_compaign(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 雕虫小技 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jenkins Operation</title>
      <link href="/jenkins/jenkins.html"/>
      <url>/jenkins/jenkins.html</url>
      <content type="html"><![CDATA[<h2 id="Add-DNS-record"><a href="#Add-DNS-record" class="headerlink" title="Add DNS record"></a>Add DNS record</h2><p>Firstly, we need ceate a host(DNS recore) for our container vpnproxy</p><p>Login <a href="https://ipa-ja-1.example.com" target="_blank" rel="noopener">https://ipa-ja-1.example.com</a><br>add a host as the following picture shows:<br>Identity –&gt; Hosts –&gt; Add :<br><img src="/images/Jenkins/add-host.jpg" alt="Add host"></p><p>By now, we’ve created a DNS recore, map vpnproxy1.shadc.example.com to IP 10.129.1.119</p><a id="more"></a><hr><h2 id="Configure-in-devop-deploy"><a href="#Configure-in-devop-deploy" class="headerlink" title="Configure in devop/deploy"></a>Configure in devop/deploy</h2><p>We are going to deploy the container on host 10.129.0.29, so we need to modify the file ip-10-129-0-29.shadc.example.com.yaml, this yaml file includes all the containers on 10.129.0.29:</p><p>This file is located in <code>~/devops/deploy/puppet/hieradata/node/shadc/</code><br>Add these lines to it:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vpnproxy.1:</span><br><span class="line">    ensure:             &apos;present&apos;</span><br></pre></td></tr></table></figure></p><blockquote><p>In this case, we only need “”ensure” option here.</p></blockquote><p>At last, the project <strong>devops/deploy</strong> should be <em>committed</em>.</p><hr><h1 id="Jenkins-Operation"><a href="#Jenkins-Operation" class="headerlink" title="Jenkins Operation"></a>Jenkins Operation</h1><h4 id="clone-Jinkins-cfg-codes"><a href="#clone-Jinkins-cfg-codes" class="headerlink" title="clone Jinkins cfg codes"></a>clone Jinkins cfg codes</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> ssh://gavinwei@git.example.com:29418/devops/jenkinscfg</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/jenkinscfg/cfg/docker/sys</span><br><span class="line">vim docker.yaml</span><br></pre></td></tr></table></figure><h4 id="Add-these-lines-to-the-end-they-are-used-by-Jenkins"><a href="#Add-these-lines-to-the-end-they-are-used-by-Jenkins" class="headerlink" title="Add these lines to the end, they are used by Jenkins:"></a>Add these lines to the end, they are used by Jenkins:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vpnproxy:</span><br><span class="line">    GIT_REPOSITORY:     &apos;docker/sys/vpnproxy&apos;</span><br><span class="line">    GENERATOR_PREFIX:   &apos;docker_sys_vpnproxy&apos;</span><br><span class="line">    DEPLOY_IMAGES:      &apos;vpnproxy&apos;</span><br></pre></td></tr></table></figure><p>Get the commander jenkins-generate.py:<br><code>cat ~/jenkinscfg/README.md</code><br><code>./jenkins-generate.py --user USER --cfgfile cfg/common/common.yaml --host https://jenkins.example.com/</code></p><h4 id="Change-the-‘USER’-and-path-of-yaml"><a href="#Change-the-‘USER’-and-path-of-yaml" class="headerlink" title="Change the ‘USER’ and path of yaml:"></a>Change the ‘USER’ and path of yaml:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/jenkinscfg</span><br><span class="line">./jenkins-generate.py --user gavinwe --cfgfile cfg/docker/sys/docker.yaml --host https://jenkins.ja.example.com/ --<span class="built_in">jobs</span> vpnproxy</span><br></pre></td></tr></table></figure><p>Login Jenkins web UI: <a href="https://jenkins.ja.example.cn" target="_blank" rel="noopener">https://jenkins.ja.example.cn</a></p><h4 id="Create-new-view-in-‘sys’-tab"><a href="#Create-new-view-in-‘sys’-tab" class="headerlink" title="Create new view in ‘sys’ tab:"></a>Create new view in ‘sys’ tab:</h4><p><img src="/images/Jenkins/sys-tab.jpg" alt="Alt text"></p><h4 id="Change-the-options-like-this"><a href="#Change-the-options-like-this" class="headerlink" title="Change the options like this:"></a>Change the options like this:</h4><p><img src="/images/Jenkins/config.png" alt="Alt text"></p><h4 id="Then-click-the-“RUN”-icon-to-next-step"><a href="#Then-click-the-“RUN”-icon-to-next-step" class="headerlink" title="Then click the “RUN” icon to next step:"></a>Then click the “RUN” icon to next step:</h4><p><img src="/images/Jenkins/options.jpg" alt="Alt text"></p><p>We can get option 1 and 2 in git server( <code>in old screen</code>)</p><ol><li>Option 1 comes from the latest version of git project <code>vpnproxy</code> code you committed</li><li>Option 2 comes from the latest version of  git project <code>devops/deploy</code></li><li>Option 3 is the domain name of host 10.129.0.29, it’s a real server, we will deploy our container on it</li><li>Option 4 is the name of your application’s image</li></ol><p>It taks almost 10 minutes to finish the building. In the meantime , you can see the detail of the building process from here:<br><img src="/images/Jenkins/detail1.jpg" alt="Alt text"></p><p><img src="/images/Jenkins/detail2.jpg" alt="Alt text"></p><p>That’s all.</p>]]></content>
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作笔记 </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jira Manully Install</title>
      <link href="/docker/install-jira-manully.html"/>
      <url>/docker/install-jira-manully.html</url>
      <content type="html"><![CDATA[<h3 id="Launch-Jira-container"><a href="#Launch-Jira-container" class="headerlink" title="Launch Jira container"></a>Launch Jira container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name jira1 -p 8181:8181 -it --entrypoint bash docker.example.com/jira:0.0.1-SNAPSHOT</span><br></pre></td></tr></table></figure><h3 id="Install-MySQL"><a href="#Install-MySQL" class="headerlink" title="Install MySQL"></a>Install MySQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/lib/mysql</span><br><span class="line">installMysql.sh</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Start-MySQL"><a href="#Start-MySQL" class="headerlink" title="Start MySQL"></a>Start MySQL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql bootstrap-pxc</span><br></pre></td></tr></table></figure><h3 id="Test-MySQL"><a href="#Test-MySQL" class="headerlink" title="Test MySQL"></a>Test MySQL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># mysql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.6.26-74.0-56 Percona XtraDB Cluster (GPL), Release rel74.0, Revision 624ef81, WSREP version 25.12, wsrep_25.12</span><br><span class="line"></span><br><span class="line">Copyright (c) 2009-2015 Percona LLC and/or its affiliates</span><br><span class="line">Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h3 id="Install-MySQL-driver"><a href="#Install-MySQL-driver" class="headerlink" title="Install MySQL driver"></a>Install MySQL driver</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp mysql-connector-java-5.1.36-bin.jar /opt/jira/lib</span><br></pre></td></tr></table></figure><h3 id="Install-Jira-in-unattended-mode"><a href="#Install-Jira-in-unattended-mode" class="headerlink" title="Install Jira in unattended mode"></a>Install Jira in unattended mode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@fa463adbc926:/opt/jira<span class="comment"># cat .install4j/response.varfile</span></span><br><span class="line"><span class="comment">#install4j response file for JIRA 6.4.10</span></span><br><span class="line"><span class="comment">#Thu May 26 09:51:12 CST 2016</span></span><br><span class="line">rmiPort<span class="variable">$Long</span>=8005</span><br><span class="line">app.jiraHome=/var/atlassian/application-data/jira</span><br><span class="line">app.install.service<span class="variable">$Boolean</span>=<span class="literal">true</span></span><br><span class="line">existingInstallationDir=/usr/<span class="built_in">local</span>/JIRA</span><br><span class="line">sys.confirmedUpdateInstallationString=<span class="literal">false</span></span><br><span class="line">sys.languageId=en</span><br><span class="line">sys.installationDir=/opt/jira</span><br><span class="line">executeLauncherAction<span class="variable">$Boolean</span>=<span class="literal">true</span></span><br><span class="line">httpPort<span class="variable">$Long</span>=8181</span><br><span class="line">portChoice=custom</span><br></pre></td></tr></table></figure><h1 id="Attendtion-what-jira-py-does-are"><a href="#Attendtion-what-jira-py-does-are" class="headerlink" title="Attendtion, what jira.py does are:"></a>Attendtion, what jira.py does are:</h1><ol><li>map local directory to container</li><li>install mysql</li><li>create database and other sql operation in mysql</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Yaml file runs every time the container starts <span class="keyword">if</span> using dockerStart.py as the entrypoint or cmd.</span><br><span class="line"></span><br><span class="line">Jira.py runs before the container starts. </span><br><span class="line"></span><br><span class="line">Jira.py can also run the container with a different <span class="built_in">command</span>.  This is how it can configure the database. </span><br><span class="line"></span><br><span class="line">The container is run with a <span class="built_in">command</span> to installmysql.  This creates files that arw mapped to the host.  That container exits and a new container runs jira.</span><br><span class="line"></span><br><span class="line">Take a look at mysql.py.  its doing similar things.</span><br></pre></td></tr></table></figure><h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><h3 id="Add-backup-yaml-to-sh"><a href="#Add-backup-yaml-to-sh" class="headerlink" title="Add backup.yaml to *.sh"></a>Add backup.yaml to *.sh</h3><p>docker save docker.example.com/jira:0.0.1-SNAPSHOT | ssh -C <a href="mailto:gavinwei@dind1.docker.example.com" target="_blank" rel="noopener">gavinwei@dind1.docker.example.com</a> “docker load”</p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> jira </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>percona容器添加logrotate功能</title>
      <link href="/docker/add-logrotate-to-percona-container.html"/>
      <url>/docker/add-logrotate-to-percona-container.html</url>
      <content type="html"><![CDATA[<h1 id="添加logRotate"><a href="#添加logRotate" class="headerlink" title="添加logRotate"></a>添加logRotate</h1><h3 id="拉包"><a href="#拉包" class="headerlink" title="拉包"></a>拉包</h3><p><code>git clone ssh://gavinwei@git.example.com:29418/docker/base</code></p><h3 id="修改脚本"><a href="#修改脚本" class="headerlink" title="修改脚本"></a>修改脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/base/ubuntu-py/src/main/docker</span><br><span class="line">cat logRotate.py</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">from</span> apscheduler.schedulers.blocking <span class="keyword">import</span> BlockingScheduler</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rotate</span><span class="params">()</span>:</span></span><br><span class="line">    os.system(<span class="string">'/etc/cron.daily/logrotate'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logrotate</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        scheduler = BlockingScheduler()</span><br><span class="line">        scheduler.add_job(rotate, <span class="string">'cron'</span>, hour=<span class="number">0</span>, minute=<span class="number">0</span>)</span><br><span class="line">        scheduler.start()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"&#123;&#125;: &#123;&#125;"</span>.format(<span class="string">'logrotate'</span>, e)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"logrotate: exited"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    logrotate()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="修改Dockerfile"><a href="#修改Dockerfile" class="headerlink" title="修改Dockerfile"></a>修改Dockerfile</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/base/ubuntu-py/src/main/docker</span><br><span class="line"></span><br><span class="line">添加</span><br><span class="line">RUN rm /etc/cron.daily/logrotate</span><br><span class="line">COPY logrotate /etc/cron.daily/</span><br></pre></td></tr></table></figure><h3 id="mvn-install"><a href="#mvn-install" class="headerlink" title="mvn install"></a>mvn install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/base/ubuntu-data</span><br><span class="line">mvn install</span><br></pre></td></tr></table></figure><p>这条命令将会下载一些包到~/.m2/repository/com/example/docker/base/ubuntu-data 下面</p><p><strong><em>镜像ubuntu-data依赖ubuntu-py，而镜像percona依赖ubuntu-data，所以，归初修改的logRotate.py脚本最后会出现在percona镜像的窗口中。</em></strong></p><h3 id="mvn-clean-install"><a href="#mvn-clean-install" class="headerlink" title="mvn clean install"></a>mvn clean install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/base</span><br><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><p>此命令将会生成大量镜像，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br><span class="line">root@uidev:~/percona# docker images</span><br><span class="line">REPOSITORY                                TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">docker.example.com/percona          0.0.1-SNAPSHOT      4bf97cc1a755        2 minutes ago       951.8 MB</span><br><span class="line">docker.example.com/ubuntu-data      0.0.1-SNAPSHOT      e614ede872af        11 minutes ago      795.9 MB</span><br><span class="line">docker.example.com/ubuntu-py        0.0.1-SNAPSHOT      7397b0030230        12 minutes ago      795.9 MB</span><br><span class="line">docker.example.com/varnish          0.0.1-SNAPSHOT      aa2377d44ecc        19 hours ago        954.2 MB</span><br><span class="line">docker.example.com/ubuntu-data      0.0.22              55ee02d4cfa6        3 months ago        794.4 MB</span><br><span class="line">docker.example.com/ubuntu-py        0.0.22              d98e886c4808        3 months ago        794.4 MB</span><br><span class="line">docker.example.com/ubuntu-java      0.0.1-SNAPSHOT      313ede731d40        3 months ago        734.1 MB</span><br><span class="line">docker.example.com/ubuntu-ldap      0.0.1-SNAPSHOT      80201502aab7        3 months ago        358.2 MB</span><br><span class="line">docker.example.com/ubuntu-upstart   0.0.1-SNAPSHOT      927c581760a9        3 months ago        268.1 MB</span><br><span class="line">docker.example.com/ubuntu           0.0.1-SNAPSHOT      918e86b5fd29        3 months ago        229.6 MB</span><br><span class="line">docker.example.com/dind             0.0.3               98be25cb5c64        3 months ago        805.7 MB</span><br><span class="line">docker.example.com/ubuntu           14.04.3             af88597ec24b        4 months ago        187.9 MB</span><br><span class="line">docker.example.com/collectd         0.0.6               f46eb5b0649b        4 months ago        655.9 MB</span><br></pre></td></tr></table></figure><h3 id="重新build-percona镜像"><a href="#重新build-percona镜像" class="headerlink" title="重新build percona镜像"></a>重新build percona镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/percona/src/main/docker</span><br><span class="line">cat backup.py</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> apscheduler.schedulers.blocking <span class="keyword">import</span> BlockingScheduler</span><br><span class="line"><span class="keyword">from</span> apscheduler.executors.pool <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fullbackup</span><span class="params">()</span>:</span></span><br><span class="line">    os.system(<span class="string">'/usr/local/bin/surrogate -b full'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">incremental</span><span class="params">()</span>:</span></span><br><span class="line">    os.system(<span class="string">'if -f /backup/backups/.digext &amp;&amp; grep full /backup/backups/.digest ;then /usr/local/bin/surrogate -b inc ; else /usr/local/bin/surrogate -b full ; fi'</span>)</span><br><span class="line"></span><br><span class="line">yaml_file = <span class="string">'/etc/mysql/conf.d/backup.yaml'</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists( <span class="string">'/backup.yaml'</span> ):</span><br><span class="line">    yaml_file = <span class="string">'/backup.yaml'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists( yaml_file ):</span><br><span class="line">    f = open(yaml_file,<span class="string">'r'</span>)</span><br><span class="line">    x = yaml.load(f)</span><br><span class="line"></span><br><span class="line">    executors = &#123;</span><br><span class="line">        <span class="string">'default'</span>: ThreadPoolExecutor(<span class="number">1</span>),</span><br><span class="line">    &#125;</span><br><span class="line">    scheduler = BlockingScheduler(executors=executors)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># We can only make full backup now</span></span><br><span class="line">    <span class="comment">#------------------Full Backup----------------------------------</span></span><br><span class="line">    <span class="keyword">if</span> x[<span class="string">'backup'</span>].has_key(<span class="string">'full'</span>) <span class="keyword">and</span> x[<span class="string">'backup'</span>][<span class="string">'full'</span>].has_key(<span class="string">'type'</span>) <span class="keyword">and</span> x[<span class="string">'backup'</span>][<span class="string">'full'</span>].has_key(<span class="string">'time'</span>):</span><br><span class="line">        scheduler.add_job(fullbackup,x[<span class="string">'backup'</span>][<span class="string">'full'</span>][<span class="string">'type'</span>], max_instances=<span class="number">2</span>, **x[<span class="string">'backup'</span>][<span class="string">'full'</span>][<span class="string">'time'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#------------------Incremental Backup---------------------------</span></span><br><span class="line">    <span class="keyword">if</span> x[<span class="string">'backup'</span>].has_key(<span class="string">'incremental'</span>) <span class="keyword">and</span> x[<span class="string">'backup'</span>][<span class="string">'incremental'</span>].has_key(<span class="string">'type'</span>) <span class="keyword">and</span> x[<span class="string">'backup'</span>][<span class="string">'incremental'</span>].has_key(<span class="string">'time'</span>):</span><br><span class="line">        scheduler.add_job(incremental,x[<span class="string">'backup'</span>][<span class="string">'incremental'</span>][<span class="string">'type'</span>], max_instances=<span class="number">2</span>, **x[<span class="string">'backup'</span>][<span class="string">'incremental'</span>][<span class="string">'time'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        scheduler.start()</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="comment"># When there is error in backup.yaml file</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span> :</span><br><span class="line">          time.sleep(<span class="number">86400</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span> :</span><br><span class="line">        time.sleep(<span class="number">86400</span>)</span><br></pre></td></tr></table></figure><p><code>cat backup.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line"><span class="attr">   full:</span></span><br><span class="line"><span class="attr">       type:</span> <span class="string">"cron"</span></span><br><span class="line"><span class="attr">       time:</span></span><br><span class="line"><span class="attr">           hour:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">           minute:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">   incremental:</span></span><br><span class="line"><span class="attr">       type:</span> <span class="string">"cron"</span></span><br><span class="line"><span class="attr">       time:</span></span><br><span class="line"><span class="attr">           hour:</span> <span class="string">"*/2"</span></span><br></pre></td></tr></table></figure><p><code>cat startMysql.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">exec</span> dockerStart.py --cfgfile /clustercheck.yaml /startMysql.yaml /backupMysql.yaml</span><br></pre></td></tr></table></figure><p><code>cat bootstrapMysql.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">exec</span> dockerStart.py --cfgfile /clustercheck.yaml /bootstrapMysql.yaml /backupMysql.yaml</span><br></pre></td></tr></table></figure><h3 id="run-scripts-auto-sh"><a href="#run-scripts-auto-sh" class="headerlink" title="run ~/scripts/auto.sh"></a>run ~/scripts/auto.sh</h3>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> container </tag>
            
            <tag> lorote </tag>
            
            <tag> 日志切割 </tag>
            
            <tag> percona </tag>
            
            <tag> python </tag>
            
            <tag> 工作笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Percona容器部署</title>
      <link href="/docker/compile-image.html"/>
      <url>/docker/compile-image.html</url>
      <content type="html"><![CDATA[<h2 id="镜像编译"><a href="#镜像编译" class="headerlink" title="镜像编译"></a>镜像编译</h2><p>以镜像percona为例，假如我们应用场景如下：<br>现在需要向pernoa镜像中添加数据库自动备份功能</p><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> ssh://gavinwei@git.example.com:29418/docker/bd/percona</span><br></pre></td></tr></table></figure><h3 id="操作percona代码"><a href="#操作percona代码" class="headerlink" title="操作percona代码"></a>操作percona代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~/percona</span></span><br><span class="line"><span class="comment"># ls </span></span><br><span class="line">pom.xml  proguard.conf  src</span><br></pre></td></tr></table></figure><p>我们所需要操作都在src目录的最底层：<br><a id="more"></a><br><code>cd src/main/docker/</code></p><p>在src/main/docker/目录下添加要新增的文件及脚本，并修改Dockerfile文件</p><h3 id="使用MAVEN进行编译"><a href="#使用MAVEN进行编译" class="headerlink" title="使用MAVEN进行编译"></a>使用MAVEN进行编译</h3><p>全部修改完成后，回到percona顶层目录：</p><p><code>cd ~/pernona</code></p><h4 id="自动获取镜像版本号："><a href="#自动获取镜像版本号：" class="headerlink" title="自动获取镜像版本号："></a>自动获取镜像版本号：</h4><p><code>mvn -U versions:resolve-ranges</code></p><h4 id="正式编译"><a href="#正式编译" class="headerlink" title="正式编译"></a>正式编译</h4><p><code>mvn clean package -X</code></p><h3 id="将镜像导入dind"><a href="#将镜像导入dind" class="headerlink" title="将镜像导入dind"></a>将镜像导入dind</h3><p><code>docker save docker.example.com/jira:0.0.1-SNAPSHOT | ssh -C &quot;你的帐户名&quot;@dind1.docker.example.com &quot;sudo docker load&quot;</code></p><p>这里的帐户名为我们邮件地址中@前面的名称，以下同理。</p><p>这一步完成后，窗口dind.1中已经有了我们重新编辑过镜像</p><p>此时有两种方法来使用该镜像来启动容器</p><h2 id="方法1：-使用fab脚本"><a href="#方法1：-使用fab脚本" class="headerlink" title="方法1： 使用fab脚本"></a>方法1： 使用fab脚本</h2><p>这种方法在之前的邮件DIND的安装中有提到过，使用<code>fab deploy:hosts=&quot;${HOSTS}&quot;</code>命令进行部署</p><h2 id="方法2：进入dind-1，直接运行run-puppet脚本"><a href="#方法2：进入dind-1，直接运行run-puppet脚本" class="headerlink" title="方法2：进入dind.1，直接运行run-puppet脚本"></a>方法2：进入dind.1，直接运行run-puppet脚本</h2><p>进行入dind.1<br><code>docker exec -it dind.1 bash</code></p><p>运行脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/你的用户名</span><br><span class="line"><span class="comment">#以debug模式运行puppet，便于排错</span></span><br><span class="line">./run-puppet --debug</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> container </tag>
            
            <tag> percona </tag>
            
            <tag> image </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SS5 Installation</title>
      <link href="/docker/ss5.html"/>
      <url>/docker/ss5.html</url>
      <content type="html"><![CDATA[<h3 id="安装ss5"><a href="#安装ss5" class="headerlink" title="安装ss5"></a>安装ss5</h3><p><code>apt-get install gcc make</code></p><h4 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://120.52.73.44/jaist.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.tar.gz</span><br><span class="line">cd ./ss5-3.8.9-8</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><p>报错：<br><code>configure: error: *** Some of the headers weren&#39;t found ***</code><br>安装libpam0g-dev解决：<br><code>apt-get install libpam0g-dev</code></p><p>make报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SS5OpenLdap.c:29:18: fatal error: ldap.h: No such file or directory</span><br><span class="line"> #include &lt;ldap.h&gt;</span><br><span class="line">                  ^</span><br><span class="line">compilation terminated.</span><br><span class="line">make[1]: *** [SS5OpenLdap.o] Error 1</span><br></pre></td></tr></table></figure></p><p>解决：<br><code>apt-get install libcurl4-openssl-dev</code></p><a id="more"></a><hr><p>主要问题是官方发布的版本没有for ubuntu的, 所以下载fedora版本, 安装完成后, 再修改一些默认脚本,<br>使之适应 ubuntu</p><hr><p>##ubuntu 下的 ss5 安装 (和附加包 安装):</p><p>1,   tar -zxvf ss5-3.8.9-1.tar.gz<br>./configre<br>发现很多包没有安装, 所以下面挨个安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dpkg-dev</span><br><span class="line"></span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">aptitude search pam | grep dev</span><br><span class="line">sudo apt-get install libpam0g-dev</span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">aptitude search ldap | grep dev   </span><br><span class="line">sudo apt-get install libldap2-dev</span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">aptitude search ssl | grep dev   </span><br><span class="line">sudo apt-get install libssl-dev</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssl</span><br><span class="line">(源程序中用到了openssl, 源代码中 /include/SS5Radius.h  有这样一行: #include &lt;openssl/md5.h&gt; )</span><br></pre></td></tr></table></figure><hr><p>有可能要先安装apt功能:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-file</span><br><span class="line">sudo apt-file update</span><br><span class="line">apt-file search functions</span><br></pre></td></tr></table></figure></p><hr><p><strong>未出现下述问题 可忽略</strong><br>./configure<br>make   发现编译二进制.o 都通过了, 但在最终链接时候报错, 说MD5_xxx 几个函数没有定义.</p><p>vi src/Makefile 加入 -lcrypto 库链接<br>LIBS = -lpthread -rdynamic -ldl -lssl -lcrypto -lldap -lpam -lpam_misc</p><p>这时候vfork.h还是没有, 但没有关系, </p><hr><p>可以编译和安装ss5了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>备注: Makefile中, 相应的安装路径:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">S[&quot;trc_path_base&quot;]=&quot;/var/log/ss5&quot;</span><br><span class="line">    539 S[&quot;log_path_base&quot;]=&quot;/var/log/ss5&quot;</span><br><span class="line">    540 S[&quot;man_path_base&quot;]=&quot;/usr/share/man&quot;</span><br><span class="line">    541 S[&quot;doc_path_base&quot;]=&quot;/usr/share/doc&quot;</span><br><span class="line">    542 S[&quot;bin_path_base&quot;]=&quot;/usr/sbin&quot;</span><br><span class="line">    543 S[&quot;conf_path_base&quot;]=&quot;/etc/opt&quot;</span><br><span class="line">    544 S[&quot;lib_path_base&quot;]=&quot;/usr/lib&quot;</span><br></pre></td></tr></table></figure></p><p>然后要对ss5的启动脚本进行修正:<br>因为安装包是for fedora的, 直接安装在unbuntu中, 有两个问题, 要修改:</p><ol><li>安装的默认启动脚本, 目录不对</li><li>启动脚本中, 用到了两个fedora平台的启动子脚本, unbuntu里没有, 所以要禁用.</li><li>对启动脚本做一些其它的小修正</li></ol><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>将安装到fedora系统默认目录下的启动脚本, copy 到 unbuntu 默认启动目录里面,<br><code>cp /etc/rc.d/init.d/ss5     /etc/init.d/ss5</code></p><h3 id="然后"><a href="#然后" class="headerlink" title="然后"></a>然后</h3><p>改动成下面脚本,<br>或者直接copy 或者 upload 我修改过的脚本到/etc/init.d/ss5:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig: 345 20 80</span></span><br><span class="line"><span class="comment"># description: This script takes care of starting \</span></span><br><span class="line"><span class="comment">#              and stopping ss5</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">OS=`uname -s`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"Linux"</span> ] || [ <span class="variable">$OS</span> = <span class="string">"SunOS"</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment">#SS5_LOG_FILE = "/var/log/ss5log"</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line"><span class="comment"># . /etc/rc.d/init.d/functions</span></span><br><span class="line"><span class="comment"># ./lib/lsb/init-functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line"><span class="comment"># . /etc/sysconfig/network</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line"><span class="comment"># [ $&#123;NETWORKING&#125; = "no" ] &amp;&amp; exit 0</span></span><br><span class="line"></span><br><span class="line"> [ -f /usr/sbin/ss5 ] || <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Test custom variables</span></span><br><span class="line"><span class="built_in">test</span> -f /etc/sysconfig/ss5 &amp;&amp; . /etc/sysconfig/ss5</span><br><span class="line"></span><br><span class="line"><span class="comment"># See how we were called.</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        <span class="comment"># Start daemon.</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Starting ss5... "</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"Linux"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment">#            daemon /usr/sbin/ss5 -t $SS5_OPTS   $SS5_OPTS = -u root in file: /etc/sysconfig/ss5  </span></span><br><span class="line">            <span class="comment"># /usr/sbin/ss5 -t -m -b 0.0.0.0:1080 -u root</span></span><br><span class="line">             /usr/sbin/ss5 -t -b 0.0.0.0:1080 -u root</span><br><span class="line">         <span class="comment">#  touch /var/lock/subsys/ss5</span></span><br><span class="line">            touch /var/run/ss5/ss5.pid</span><br><span class="line"><span class="comment">#   else</span></span><br><span class="line"><span class="comment">#     if [ $OS = "SunOS" ]; then</span></span><br><span class="line"><span class="comment">#              /usr/sbin/ss5 -t </span></span><br><span class="line"><span class="comment">#              touch /var/lock/subsys/ss5</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">              /usr/<span class="built_in">local</span>/sbin/ss5 -t </span><br><span class="line">            touch /var/run/ss5/ss5.pid</span><br><span class="line"><span class="comment">#            touch /var/lock/subsys/ss5</span></span><br><span class="line"><span class="comment">#     fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"done"</span></span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">  stop)</span><br><span class="line">        <span class="comment"># Stop daemon.</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Shutting down ss5... "</span></span><br><span class="line">killall ss5 </span><br><span class="line">rm -f /var/run/ss5/ss5.pid</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"done"</span></span><br><span class="line">        ;;</span><br><span class="line">  reload)</span><br><span class="line">        <span class="comment"># Reload configuration</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"Linux"</span> ] || [ <span class="variable">$OS</span> = <span class="string">"SunOS"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Reloading ss5... "</span></span><br><span class="line">    killproc ss5 -1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pkill -HUP ss5</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"done reload"</span></span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">        <span class="comment"># Restart daemon</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Restarting ss5... "</span></span><br><span class="line">    <span class="variable">$0</span> stop</span><br><span class="line">    <span class="variable">$0</span> start</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"Linux"</span> ] || [ <span class="variable">$OS</span> = <span class="string">"SunOS"</span> ]; <span class="keyword">then</span></span><br><span class="line">      status ss5</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: ss5 &#123;start|stop|status|restart|reload&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p><h4 id="对ss5进行配置"><a href="#对ss5进行配置" class="headerlink" title="对ss5进行配置:"></a>对ss5进行配置:</h4><p>修改/etc/opt/ss5 目录下的两个文件:  ss5.conf  and ss5.passwd</p><p>修改配置文件:<br>/etc/opt/ss5/ss5.conf<br>修改:<br>auth 0.0.0.0/0 – -<br>改成:<br>auth 0.0.0.0/0 – u</p><p>修改：<br>permit – 0.0.0.0/0 – 0.0.0.0/0 – – – – -<br>改成:<br>permit u 0.0.0.0/0 – 0.0.0.0/0 – – – – -</p><p>修改配置文件 (这一步也可以省略, 我改的启动脚本中已经带这个参数)：<br>/etc/sysconfig/ss5<br>打开：<code>SS5_OPTS=” -u root”</code></p><p>然后在/etc/opt/ss5/ss5.passwd中, 一行一个用户+密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat ss5.passwd`</span><br><span class="line">test 123456</span><br></pre></td></tr></table></figure></p><p>最后启动ss5, 可能第一次运行时候, 需要手动建立pid目录:</p><p>可能需要修改脚本权限:<br>ls -la /etc/init.d/<br>chmod 700 /etc/init.d/ss5</p><p>然后启动, 停止下测试:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># /etc/init.d/ss5 start</span><br><span class="line"># /etc/init.d/ss5 stop</span><br><span class="line"></span><br><span class="line"># /etc/rc.d/init.d/ss5 start</span><br><span class="line"># /etc/rc.d/init.d/ss5 start</span><br><span class="line">doneting ss5… [ OK ]</span><br></pre></td></tr></table></figure></p><p>再重启下看看:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># /etc/rc.d/init.d/ss5 restart</span><br><span class="line">Restarting ss5… Shutting down ss5…</span><br><span class="line">done [ OK ]</span><br><span class="line">doneting ss5… [ OK ]</span><br></pre></td></tr></table></figure></p><p>没问题了, 你就可以使用服务器的IP, 端口1080, 用户test, 密码123456<br>来测试你的socks5服务器了, 更多高级应用, 参看ss5.conf, 里面有详细的说明.</p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ss5 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker deployment</title>
      <link href="/docker/docker-deployment.html"/>
      <url>/docker/docker-deployment.html</url>
      <content type="html"><![CDATA[<p>Docker容器部署的大致步骤如下：</p><h2 id="一、在VM层的操作"><a href="#一、在VM层的操作" class="headerlink" title="一、在VM层的操作"></a>一、在VM层的操作</h2><h4 id="镜像编译工作"><a href="#镜像编译工作" class="headerlink" title="镜像编译工作"></a>镜像编译工作</h4><p>在镜像项目的顶层目录下运行：<br><code>mvn versions:resolve-ranges</code><br>这一步用于获取base镜像的版本号<br>下一步进行镜像的编译：<br><code>mvn clean install</code></p><p>编译完成后，可使用<code>docker images</code>命令来查看所编译镜像是否存在</p><h4 id="传输镜像"><a href="#传输镜像" class="headerlink" title="传输镜像"></a>传输镜像</h4><p>通过下面命令将编译好的镜像传输至DIND：<br><code>docker save docker.example.com/jira:0.0.1-SNAPSHOT | ssh -C root@dind1.docker.example.com &quot;docker load&quot;</code><br><a id="more"></a></p><h4 id="同步puppet配置文件"><a href="#同步puppet配置文件" class="headerlink" title="同步puppet配置文件"></a>同步puppet配置文件</h4><p>git上的devops/deploy项目提供了在DIND中启动容器至关重要的文件支持，对于第一个docker项目而言，在VM层修改过devops/deploy中的配置文件后，都需要进入path/to/devops/deploy目录中,使用fab命令将文件同步到DIND中的/home/gavinwei目录下：<br><code>fab -u gavinwei provision:hosts=dind1.docker.example.com</code><br><em>gavinwei 可替换为你自已的用户名</em></p><h2 id="二、在DIND中的操作"><a href="#二、在DIND中的操作" class="headerlink" title="二、在DIND中的操作"></a>二、在DIND中的操作</h2><h4 id="进入DIND"><a href="#进入DIND" class="headerlink" title="进入DIND"></a>进入DIND</h4><p>使用如下命令进行DIND窗口内部，默认以root身份登录：<br><code>docker exec -it dind.1 bash</code></p><p>进入你帐号所在的家目录，比如我之前在fab命令中使用的是gavinwei，就可以使用如下命令：<br><code>cd /home/gavinwei</code></p><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><p> 修改文件<code>/home/gavinwei/puppet/hieradata/node/sj/dind1.docker.example.com.yaml</code>，将其中的项目名称修改为自己的项目名称后，进行run-puppet脚本：<br> <code>./run-puppet --debug</code><br><em>–debug选项可以显示启动的具体过程，便于debug</em></p><p>随后容器就启动了，可使用<code>docker ps</code>查看。</p><hr><p>   DIND 是本地测试环境的基础，其部署方法及步骤详见附件。</p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> DIND </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vpnporxy 部署纪要</title>
      <link href="/docker/fabfile.html"/>
      <url>/docker/fabfile.html</url>
      <content type="html"><![CDATA[<h3 id="解决fabfile中hosts变量的获取问题"><a href="#解决fabfile中hosts变量的获取问题" class="headerlink" title="解决fabfile中hosts变量的获取问题"></a>解决fabfile中hosts变量的获取问题</h3><p>test_depoly中使用_find_hosts_by_cluster_and_container（cluster,container）来获取hosts，但是传进来的这两个变量都有可能是列表，所以要解决列表问题，最后还要解决hosts列表中的元素为列表的情况<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> type(containers) == str:</span><br><span class="line">   hosts = map(<span class="keyword">lambda</span> cluster: _find_hosts_by_cluster_and_container(cluster, containers), clusters)</span><br><span class="line"><span class="keyword">if</span> type(containers) == list:</span><br><span class="line">   hosts = []</span><br><span class="line">   <span class="keyword">for</span> containers <span class="keyword">in</span> containerss:</span><br><span class="line">       host = map(<span class="keyword">lambda</span> cluster: _find_hosts_by_cluster_and_container(cluster, container), clusters)</span><br><span class="line">       hosts.extend(host)</span><br><span class="line">lst = []</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> hosts:</span><br><span class="line">   <span class="keyword">if</span> type(host) == list:</span><br><span class="line">      lst.extend(host)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      lst.append(host)</span><br><span class="line">hosts = lst</span><br><span class="line"><span class="keyword">print</span> hosts</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(hosts) == <span class="number">0</span>:</span><br><span class="line">    env.hosts = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env.hosts = hosts</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="容器域名的添加"><a href="#容器域名的添加" class="headerlink" title="容器域名的添加"></a>容器域名的添加</h3><p>一开始没有搞清楚服务域名和部署主机域名，浪费了点时间来处理这个问题，新添加的域名生效也很慢。</p><h3 id="version-No-的获取问题"><a href="#version-No-的获取问题" class="headerlink" title="version No. 的获取问题"></a>version No. 的获取问题</h3><p>上面所有总是解决后，遇到的最后一个报错：<br><img src="/images/fabfile/vpnproxy-error.png" alt="Alt text"></p><p>版本号问题，Nia分辨出是docker.pp没有获取正确的version number，最后找到是主机46没有建立tag file，初建后，运行成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my::config::tags::vpnproxy:</span><br><span class="line">    tag: 87aded288d1dbc874289852bc652db5e334a4959-SNAPSHOT</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> python </tag>
            
            <tag> fabfile </tag>
            
            <tag> fabric </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
